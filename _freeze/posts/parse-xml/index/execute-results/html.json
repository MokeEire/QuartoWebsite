{
  "hash": "bf43963355613dff7e732f68f92b4d28",
  "result": {
    "markdown": "---\ntitle: \"Untangling XML data with R\"\nsubtitle: \"And parsing it into a tidy format\"\ndate: \"2022-07-14\"\ncategories: \n  - data\n  - governance\n  - R\nformat: \n  html: \n    toc: true\n    code-link: true\n    code-fold: show\n    code-tools: true\n    comments:\n      hypothesis: true\n---\n\n::: {.cell}\n\n:::\n\n\nXML, or (e)Xtensible Markup Language, can be a pain to get into a tabular format for analysis. It is designed to contain any \"arbitrary\" structure[^1] of data which makes it useful for storing things like financial transactions, webpage content and document formatting[^2]. Whenever I've worked with XML in the past, there seemed to be a dearth of resources describing how to actually transform the data into something usable. This post aims to remedy that by describing how to parse an XML file from [GovInfo's congressional bill data](https://www.govinfo.gov/bulkdata/BILLSTATUS).\n\n[^1]: [Wikipedia](https://en.wikipedia.org/wiki/XML) for the curious. Don't miss the drama about Microsoft's \"vociferous protests\" as one of the co-editors started working with Netscape.\n\n[^2]: The *x* at the end of Microsoft file types (e.g. .docx, .xlsx, .pptx) stands for XML.\n\n::: {.callout-tip appearance=\"simple\"}\n## What you'll learn:\n\n1.  Load and parse XML files in R using the `{XML}` and `{xml2}` packages\n2.  Explore the structure of XML documents\n3.  Transform your data from XML into a tabular format using `{purrr}`, and make use of `{tidyr}`'s list columns\n:::\n\n::: {.callout-note collapse=\"true\" appearance=\"simple\"}\n## TL;DR\n\nTransforming XML into a tabular format can be tricky depending on the structure. Start by understanding how the data is organized, what you want it to look like, and what level of detail you are looking at. This post uses [GovInfo's congressional bill data](https://www.govinfo.gov/bulkdata/BILLSTATUS) to explore examples of XML structure.\n\n1.  [Navigate XML](#sec-navigate-xml)\n\n> Look through any available documentation, always. When you read in the XML file, `xmlParse()`, `xml_structure()`, and `xml_contents()` are some of the functions that will help you navigate the structure you're dealing with.\n\n2.  [**Define the output**]\n\n> Consider what you want the output to look like and think about how the data needs to be transformed to match this. Once you understand the existing structure, the data you need, and your desired output structure, it is time to start parsing.\n\n3.  [**Parse a single element**] (write a function if it gets too complicated)\n\n> Get one element into the form you want first. Writing functions can help you think through the data transformations being applied and make your code easier to read. You can see an example of this functional approach in [parsing legislative actions](#sec-nested-data). Once you're reliably parsing multiple elements and producing a consistent output format, you can scale up.\n\n4.  **Apply to all elements**\n\n> Next, focus on processing a single file in full (or the subset of the file you're interested in). You might want an XML file to return a single row, a single column, or a data frame of size $n\\times k$. Once you have a single file returned in the format you want, you can combine the outputs of all the files in your dataset.\n:::\n\n# What is XML?\n\nAt its core, XML is \"information wrapped in tags\". You can think of the structure like branches of a tree, with each branch having their own leaves. Below is an example of a bookstore's data in XML format from [w3schools](https://www.w3schools.com/XML/xml_usedfor.asp).\n\n``` xml\n<bookstore>\n  <book category=\"children\">\n    <title>Harry Potter</title>\n    <author>J K. Rowling</author>\n    <year>2005</year>\n    <price>29.99</price>\n  </book>\n  <book category=\"web\">\n    <title>Learning XML</title>\n    <author>Erik T. Ray</author>\n    <year>2003</year>\n    <price>39.95</price>\n  </book>\n</bookstore>\n```\n\n`<bookstore>` is the parent, or *root* element here. The two `<book>` elements are the bookstore's *children*, each of which has individual data points in *child* elements (e.g. `<title>`) and *attributes* e.g. `<book category=\"children\">` store books' category.\n\n::: {.callout-note appearance=\"simple\"}\n## Note\n\nAttributes are a useful way to store data related to a specific element for HTML, but using child elements is typically preferred in XML[^3]. However, you'll still likely run into data stored in attributes so we'll touch on extracting data from both.\n:::\n\n[^3]: To learn more about what XML is and how to use it, I recommend going through [w3school's XML tutorial](https://www.w3schools.com/XML/default.asp).\n\n# Navigate XML {#sec-navigate-xml}\n\nIf you've never used R before, this will be a bit of a rough point to start learning. Instead I would recommend checking [RStudio's beginners guide](https://education.rstudio.com/learn/beginner/), so for the remainder of the post I will assume some familiarity with R.\n\nFour packages I use throughout this post are listed below. If you don't understand how a function works or want to see the function reference, click on the function in the code and it *should* bring you to the function's help page.\n\n-   `{XML}` and `{xml2}` provide functions for reading in and parsing XML[^4]\n\n-   `{purrr}` and `{tidyr}` (loaded as part of the `{tidyverse}` package) help us wrangle lists and transform XML to data frames.\n\n[^4]: Between `{XML}` and `{xml2}` there are numerous ways to load XML data with R. I generally prefer `{xml2}` but I suggest looking through the packages' documentation to find the right function for your task\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\" code-summary=\"Load libraries\"}\n# copy the comment below to install the packages\n# install.packages(c(\"tidyverse\", \"XML\", \"xml2))\nlibrary(tidyverse)\nlibrary(XML)\nlibrary(xml2)\n```\n:::\n\n\nTo illustrate complexities of XML structures I'll be using [congressional bill status data](https://www.govinfo.gov/bulkdata/BILLSTATUS) from the US GPO's [GovInfo service](https://www.govinfo.gov/). In particular, you can download the sample bill [here](https://www.govinfo.gov/bulkdata/BILLSTATUS/117/hr/BILLSTATUS-117hr391.xml \"HR-391: Global Health Security Act of 2021\") (chosen for its examples of challenges parsing XML).\n\nFirst we need to read in the XML file. You can pass the URL or file path of the XML file to `read_xml()` to create an `xml_document` object[^5]. To see the contents of the file you've just loaded you can use `xml_contents()` or enter the object's name (here `bill_xml`) in the console.\n\n[^5]: `xml_document` is one of the \"key classes\" used in the `{xml2}` library, the others being `xml_node` (a single node), and `xml_nodeset` (a set of nodes).\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\" code-summary=\"Load and view XML file\"}\n# Read XML file\nbill_xml = read_xml(\"https://www.govinfo.gov/bulkdata/BILLSTATUS/117/hr/BILLSTATUS-117hr391.xml\")\n\n# Look at xml_document's contents\nxml_contents(bill_xml)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n{xml_nodeset (2)}\n[1] <bill>\\n  <billNumber>391</billNumber>\\n  <createDate>2021-01-22T08:12:10 ...\n[2] <dublinCore xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\\n  <dc:format>te ...\n```\n:::\n:::\n\n\nWe have two top-level nodes - `<bill>` and `<dublinCore>`[^6]. The latter is actually a metadata identifier and doesn't contain bill-related information. `xml_child()` selects the `<bill>` node which returns an XML nodeset that looks like this:\n\n[^6]: Which is a document metadata identifier, not an Irish metal music genre. While very useful in its own right, it isn't relevant for our task here.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\" code-summary=\"Select first matching child element\"}\n(bill_node = xml_child(bill_xml, \"bill\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n{xml_node}\n<bill>\n [1] <billNumber>391</billNumber>\n [2] <createDate>2021-01-22T08:12:10Z</createDate>\n [3] <updateDate>2022-09-07T13:37:22Z</updateDate>\n [4] <originChamber>House</originChamber>\n [5] <billType>HR</billType>\n [6] <introducedDate>2021-01-21</introducedDate>\n [7] <congress>117</congress>\n [8] <constitutionalAuthorityStatementText><![CDATA[<pre>[Congressional Recor ...\n [9] <recordedVotes>\\n  <recordedVote>\\n    <rollNumber>188</rollNumber>\\n    ...\n[10] <committees>\\n  <billCommittees>\\n    <item>\\n      <systemCode>ssfr00</ ...\n[11] <committeeReports/>\n[12] <relatedBills/>\n[13] <actions>\\n  <item>\\n    <actionDate>2021-07-12</actionDate>\\n    <commi ...\n[14] <sponsors>\\n  <item>\\n    <bioguideId>C001078</bioguideId>\\n    <fullNam ...\n[15] <cosponsors>\\n  <item>\\n    <bioguideId>C000266</bioguideId>\\n    <fullN ...\n[16] <cboCostEstimates>\\n  <item>\\n    <pubDate>2021-05-11T15:11:11Z</pubDate ...\n[17] <laws/>\n[18] <notes/>\n[19] <policyArea>\\n  <name>International Affairs</name>\\n</policyArea>\n[20] <subjects>\\n  <billSubjects>\\n    <legislativeSubjects>\\n      <item>\\n  ...\n...\n```\n:::\n:::\n\n\n# Define the output {#sec-define-output}\n\nNow we have the bill XML loaded and we've already stripped away some data we don't need but before diving deeper, it's helpful to think about the how you want to the processed XML data to be structured. For example, in the bill status data I might want to collect party-level votes. This could take the form of one row per party per bill with a column for yeas, nays, and abstentions[^7]. Perhaps I want to look at the policy areas of bills which became law. Instead of processing the entire file and then selecting the data I want, I can select only the nodes I need at the outset before transforming the data into a data frame. This will likely save you some time in cases where you have a lot of data.\n\n[^7]: For example\n\n    | Bill     | Party    | $\\cdots$ | Yeas     | Nays     | Abstentions |\n    |----------|----------|----------|----------|----------|-------------|\n    | HR-1     | R        | $\\cdots$ | 221      | 0        | 1           |\n    | HR-1     | D        | $\\cdots$ | 0        | 212      | 1           |\n    | $\\vdots$ | $\\vdots$ | $\\vdots$ | $\\vdots$ | $\\vdots$ | $\\vdots$    |\n\n    : Potential structure for party-level votes\n\n\n::: {.cell .column-page}\n\n:::\n\n\nWith the congressional bills data, I defined my output as a bill-level dataset, i.e. one bill per row, storing *nested* elements like `recordedVotes`, `committees`, and `actions` inside [list columns](https://jennybc.github.io/purrr-tutorial/ls13_list-columns.html). While columns in a data frame are typically *atomic vectors*[^8] of equal length, list columns enable us to store data of varying length and type, including data frames themselves. Using `{tidyr}`'s `unnest()` function, we can expand this nested data into regular data frame columns. Here is what this output will look like:\n\n[^8]: Atomic vectors are vectors with elements of the same type (e.g. numeric, character, etc.) as opposed to *general vectors*, or lists, which can contain a variety of types.\n\n\n::: {.cell .column-page}\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-28073f69899ca75cb591\" class=\"reactable html-widget\" style=\"width:auto;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-28073f69899ca75cb591\">{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"bill_id\":[\"HR-391\"],\"bill_number\":[\"391\"],\"create_date\":[\"2021-01-22T08:12:10Z\"],\"update_date\":[\"2022-09-07T13:37:22Z\"],\"origin_chamber\":[\"House\"],\"bill_type\":[\"HR\"],\"introduced_date\":[\"2021-01-21T00:00:00Z\"],\"congress\":[\"117\"],\"constitutional_authority_statement_text\":[\"<pre>[Congressional Record Volume 167, Number 17 (Thursday, January 28, 2021)][House]From the Congressional Record Online through the Government Publishing Office [<a href=\\\"https://www.gpo.gov\\\">www.gpo.gov<\\/a>]By Ms. SANCHEZ:H.J. Res. 22.Congress has the power to enact this legislation pursuantto the following:Article 1 Section 8ADDITIONAL SPONSORSUnder clause 7 of rule XII, sponsors were added to public bills andresolutions, as follows:H.R. 28: Mr. Chabot, Mr. Armstrong, Mrs. Fischbach, Mr.Lucas, Mr. Mast, and Mr. Womack.H.R. 40: Mr. Kahele, Ms. Roybal-Allard, Mr. Aguilar, Ms.Waters, Mr. Vela, Mr. Sires, and Mr. Huffman.H.R. 51: Mr. Mrvan and Ms. Davids of Kansas.H.R. 55: Ms. Ross, Mr. Lynch, Mr. Larsen of Washington, Mr.Thompson of California, Ms. Manning, Ms. Jayapal, Ms. Adams,Mr. Schneider, Mr. Veasey, and Ms. Wild.H.R. 77: Mr. Grothman.H.R. 78: Mr. Smith of New Jersey, Mr. Hice of Georgia, Mr.Bucshon, Mr. Burgess, and Mr. Norman.H.R. 97: Mrs. Hayes, Mr. Welch, Mr. Torres of New York, Mr.Cicilline, and Mr. Danny K. Davis of Illinois.H.R. 147: Mr. Ryan and Mr. Brown.H.R. 197: Mr. Brendan F. Boyle of Pennsylvania and Mr.Hastings.H.R. 217: Mr. Hice of Georgia.H.R. 235: Mr. Meeks and Mr. Torres of New York.H.R. 243: Mr. Armstrong.H.R. 255: Mr. Auchincloss, Mr. DeSaulnier, Mr. Schrader,and Ms. Chu.H.R. 256: Mr. Schrader and Ms. Chu.H.R. 262: Mr. Cicilline and Mr. Torres of New York.H.R. 265: Mr. Veasey.H.R. 275: Mr. Jacobs of New York, Ms. Herrera Beutler, Mr.McCaul, Mr. Joyce of Ohio, Mrs. Bice of Oklahoma, Mr.LaMalfa, Mrs. Steel, Mr. Hill, Mr. Garbarino, Mr. Pfluger,Mr. Gimenez, and Mrs. Cammack.H.R. 279: Mr. Neguse, Mr. Crow, and Mr. DeSaulnier.H.R. 289: Mr. Perry.H.R. 295: Mr. Cloud.H.R. 302: Mr. Costa.H.R. 304: Mr. Raskin, Mr. Lynch, Mr. Carson, Ms. Norton,and Mr. Kilmer.H.R. 305: Ms. Ross, Mr. Kind, and Mr. Michael F. Doyle ofPennsylvania.H.R. 322: Mr. Wilson of South Carolina.H.R. 326: Mr. Costa.H.R. 332: Mr. Stanton and Mrs. Wagner.H.R. 349: Ms. Williams of Georgia, Ms. Brownley, Ms. BluntRochester, and Mrs. Trahan.H.R. 359: Mr. Rodney Davis of Illinois.H.R. 369: Mrs. Hayes and Ms. Schrier.H.R. 377: Mr. Rice of South Carolina and Ms. Herrell.H.R. 378: Mr. Rice of South Carolina and Ms. Herrell.H.R. 384: Mr. Cohen, Ms. Mace, Mr. Huffman, Mr. Hastings,and Ms. Eshoo.H.R. 391: Mr. DeSaulnier, Mrs. Napolitano, Ms. Chu, Mr.Harder of California, Mr. Cohen, and Mrs. Fletcher.H.R. 392: Mr. Smith of Washington, Ms. Moore of Wisconsin,Mr. Sablan, and Mr. Sires.H.R. 398: Ms. Herrell.H.R. 407: Mr. Mast.H.R. 421: Ms. Plaskett, Mr. Rush, and Mr. Correa.H.R. 426: Mr. Hagedorn, Mr. Mooney, Mr. Green of Tennessee,Mr. Norman, and Mr. Davidson.H.R. 447: Mr. DeSaulnier, Mr. Courtney, Ms. Adams, Mrs.McBath, Mr. Kinzinger, Mr. Castro of Texas, Mr. Stivers, Mr.Morelle, Mr. Smith of Washington, Mr. Khanna, Mr. Sarbanes,Ms. Norton, Ms. Stevens, Mr. Grijalva, Ms. Blunt Rochester,Mr. Cardenas, Ms. Schakowsky, Ms. Jackson Lee, Mr.Krishnamoorthi, Mr. Danny K. Davis of Illinois, Mrs. Demings,Mr. Foster, Ms. Houlahan, Mr. Moulton, Mr. Kilmer, Ms. Meng,Mr. Gallego, Mr. Brown, Mr. Suozzi, Mr. Garamendi, Mr.Neguse, Ms. McCollum, Mr. Kildee, Mrs. Beatty, Mr. Carbajal,Ms. Craig, Mr. Trone, Ms. Waters, Mr. Casten, Mrs. Bustos,Mr. Langevin, Mr. Sires, Mr. Kahele, Mr. Ryan, Ms. Underwood,Mr. Stanton, Mr. Carson, Mr. David Scott of Georgia, Ms. Leeof California, Mrs. Dingell, Mrs. Axne, Mr. Horsford, and Mr.Lamb.H.R. 448: Mr. Jones.H.R. 449: Mrs. Miller of Illinois.H.R. 450: Mrs. Miller of Illinois.H.R. 452: Mr. Nunes and Mr. Joyce of Ohio.H.R. 465: Mr. Costa and Mr. Valadao.H.R. 471: Mr. Buck, Ms. Mace, Mr. Perry, Mr. Wright, Mr.Babin, Mr. Norman, and Mr. Gibbs.H.R. 472: Mr. Feenstra.H.R. 485: Mrs. Hayes, Mr. Castro of Texas, Ms. Wild, Mr.Takano, Mr. Morelle, Mrs. Trahan, Mr. Levin of Michigan, andMs. Adams.H.R. 488: Mr. Newhouse, Mr. Stewart,[...][Page H254]<\\/pre>\"],\"title\":[\"Global Health Security Act of 2021\"],\"version\":[\"1.0.0\"],\"policy_areas\":[\"International Affairs\"],\"legislative_subjects\":[[\"Advisory bodies\",\"Animal and plant health\",\"Congressional oversight\",\"Emergency medical services and trauma care\",\"Executive Office of the President\",\"Executive agency funding and structure\",\"Federal officials\",\"Foreign aid and international relief\",\"Government ethics and transparency, public corruption\",\"Government information and archives\",\"Health promotion and preventive care\",\"Infectious and parasitic diseases\",\"International organizations and cooperation\",\"Performance measurement\",\"Public-private cooperation\",\"World health\"]],\"bill_summaries\":[{\"versionCode\":[\"00\",\"53\"],\"actionDate\":[\"2021-01-21\",\"2021-06-28\"],\"actionDesc\":[\"Introduced in House\",\"Passed House\"],\"lastSummaryUpdateDate\":[\"2021-02-23T16:30:59Z\",\"2021-10-28T16:45:09Z\"],\"text\":[\" <p><b>Global Health Security Act of 2021<\\/b><\\/p> <p>This bill directs the President to create the Global Health Security Agenda Interagency Review Council to implement the Global Health Security Agenda, an initiative launched by nearly 30 nations to address global infectious disease threats. <\\/p> <p>The council's responsibilities include (1) providing policy recommendations on agenda-related goals, objectives, and implementation; (2) helping federal agencies with implementation; and (3) reviewing the progress and challenges in achieving U.S. commitments, including assistance to help other countries meet agenda&nbsp;targets. The bill also directs the federal agencies involved&nbsp;with the agenda&nbsp;to prioritize its implementation and to take certain steps to achieve that goal.<\\/p> <p>The President shall also appoint a U.S. Coordinator for Global Health Security to coordinate and report on the interagency process for responding to global health security emergencies.<\\/p>\",\" <p><b>Global Health Security Act of 2021<\\/b><\\/p> <p>This bill directs the United States to implement a strategy to strengthen global health security, including by requiring the President to create the Global Health Security Agenda Interagency Review Council to implement the Global Health Security Agenda. The agenda is an initiative launched by nearly 30 nations to address global infectious disease threats. <\\/p> <p>The council's responsibilities include (1) providing policy recommendations on agenda-related goals, objectives, implementation, and other international efforts to strengthen pandemic preparedness and response; (2) helping federal agencies with implementation; and (3) reviewing the progress and challenges in achieving U.S. commitments, including assistance to help other countries meet agenda&nbsp;targets. The bill also directs the federal agencies involved&nbsp;with the agenda&nbsp;to prioritize its implementation and to take certain steps to achieve that goal.<\\/p> <p>The President shall coordinate a strategy for responding to global health security emergencies and submit a report on the implementation of this strategy.<\\/p> <p>Additionally, the Department of State should seek to enter into negotiations with donors, relevant United Nations agencies, and other multilateral stakeholders to establish a Fund for Global Health Security and Pandemic Preparedness that (1) closes gaps in global health security and pandemic preparedness; and (2) builds capacity in eligible partner countries related to global health security, infectious disease control, and pandemic preparedness. The fund should provide grants, technical assistance, and innovative funding mechanisms to achieve its purposes.<\\/p>\"],\"updateDate\":[\"2021-01-21T05:00:00Z\",\"2021-06-28T13:24:07Z\"],\"name\":[\"Introduced in House\",\"Passed House\"]}],\"bill_titles\":[{\"titleType\":[\"Display Title\",\"Official Title as Introduced\",\"Short Title(s) as Passed House\",\"Short Title(s) as Introduced\",\"Short Titles as Passed House\"],\"title\":[\"Global Health Security Act of 2021\",\"To authorize a comprehensive, strategic approach for United States foreign assistance to developing countries to strengthen global health security, and for other purposes.\",\"Global Health Security Act of 2021\",\"Global Health Security Act of 2021\",\"Global Health Security Act of 2021\"],\"parentTitleType\":[null,null,\"Short Title\",\"Short Title\",\"Short Titles House of Representatives\"],\"chamberCode\":[null,null,\"H\",null,\"H\"],\"chamberName\":[null,null,\"House\",null,\"House\"]}],\"bill_text_versions\":[{\"type\":[\"Referred in Senate\",\"Engrossed in House\",\"Introduced in House\"],\"date\":[\"2021-07-12T04:00:00Z\",\"2021-06-28T04:00:00Z\",\"2021-01-21T05:00:00Z\"],\"url\":[\"https://www.govinfo.gov/content/pkg/BILLS-117hr391rfs/xml/BILLS-117hr391rfs.xml\",\"https://www.govinfo.gov/content/pkg/BILLS-117hr391eh/xml/BILLS-117hr391eh.xml\",\"https://www.govinfo.gov/content/pkg/BILLS-117hr391ih/xml/BILLS-117hr391ih.xml\"]}],\"latest_action_action_date\":[\"2021-07-12T00:00:00Z\"],\"latest_action_text\":[\"Received in the Senate and Read twice and referred to the Committee on Foreign Relations.\"],\"committees\":[{\"committee_system_code\":[\"ssfr00\",\"hsfa00\"],\"committee_name\":[\"Foreign Relations Committee\",\"Foreign Affairs Committee\"],\"committee_chamber\":[\"Senate\",\"House\"],\"committee_type\":[\"Standing\",\"Standing\"],\"committee_activities\":[{\"committee_activity_name\":[\"Referred to\"],\"committee_activity_date\":[\"2021-07-12T20:09:26Z\"]},{\"committee_activity_name\":[\"Markup by\",\"Referred to\"],\"committee_activity_date\":[\"2021-03-25T13:10:28Z\",\"2021-01-21T19:07:20Z\"]}],\"subcommittee_activities\":[{},{}]}],\"house_votes\":[{\"roll_number\":[\"188\"],\"url\":[\"https://clerk.house.gov/evs/2021/roll188.xml\"],\"full_action_name\":[\"Final Passage Under Suspension of the Rules Results\"],\"chamber\":[\"House\"],\"date\":[\"2021-06-28T23:46:02Z\"],\"session_number\":[\"1\"],\"vote_roll\":[{\"majority\":[\"D\"],\"rollcall_num\":[\"188\"],\"vote_question\":[\"On Motion to Suspend the Rules and Pass, as Amended\"],\"vote_type\":[\"2/3 YEA-AND-NAY\"],\"vote_result\":[\"Passed\"],\"action_date\":[\"28-Jun-2021\"],\"action_time\":[\"7:42 PM\"],\"vote_desc\":[\"Global Health Security Act\"],\"legislator_votes\":[{\"name_id\":[\"A000370\",\"A000055\",\"A000371\",\"A000372\",\"A000376\",\"A000369\",\"A000377\",\"A000375\",\"A000148\",\"A000378\",\"B001291\",\"B001298\",\"B001307\",\"B001306\",\"B001299\",\"B001282\",\"B001300\",\"B001270\",\"B001281\",\"B000668\",\"B001287\",\"B001301\",\"B001292\",\"B000740\",\"B001302\",\"B001257\",\"B000490\",\"B001311\",\"B000574\",\"B001303\",\"B000825\",\"B001278\",\"B001295\",\"B001312\",\"B001223\",\"B001296\",\"B000755\",\"B001274\",\"B001304\",\"B001285\",\"B001260\",\"B001297\",\"B001275\",\"B001305\",\"B001309\",\"B001248\",\"B001224\",\"B001286\",\"B001251\",\"C000059\",\"C001039\",\"C001112\",\"C001097\",\"C001054\",\"C001072\",\"C001103\",\"C001125\",\"C001051\",\"C001090\",\"C001055\",\"C001117\",\"C001066\",\"C001091\",\"C001104\",\"C000266\",\"C001109\",\"C001080\",\"C001084\",\"C001101\",\"C001067\",\"C001061\",\"C001118\",\"C001115\",\"C000537\",\"C001116\",\"C001068\",\"C001053\",\"C001108\",\"C001078\",\"C000754\",\"C001110\",\"C001059\",\"C001069\",\"C001119\",\"C001087\",\"C001120\",\"C001111\",\"C001121\",\"C001063\",\"C001114\",\"D000629\",\"D000626\",\"D000096\",\"D000619\",\"D000631\",\"D000191\",\"D000197\",\"D000216\",\"D000617\",\"D000630\",\"D000627\",\"D000623\",\"D000616\",\"D000610\",\"D000600\",\"D000624\",\"D000399\",\"D000032\",\"D000482\",\"D000615\",\"D000628\",\"E000294\",\"E000299\",\"E000215\",\"E000297\",\"E000298\",\"E000296\",\"F000246\",\"F000446\",\"F000465\",\"F000470\",\"F000471\",\"F000466\",\"F000459\",\"F000468\",\"F000449\",\"F000454\",\"F000450\",\"F000462\",\"F000472\",\"F000469\",\"G000578\",\"G000579\",\"G000574\",\"G000559\",\"G000597\",\"G000061\",\"G000586\",\"G000587\",\"G000563\",\"G000593\",\"G000552\",\"G000592\",\"G000585\",\"G000594\",\"G000588\",\"G000581\",\"G000595\",\"G000589\",\"G000565\",\"G000583\",\"G000377\",\"G000577\",\"G000546\",\"G000590\",\"G000553\",\"G000596\",\"G000568\",\"G000551\",\"G000576\",\"G000591\",\"G000558\",\"H001088\",\"H001090\",\"H001052\",\"H001086\",\"H001053\",\"H001081\",\"H001082\",\"H001084\",\"H001056\",\"H001071\",\"H001077\",\"H001038\",\"H001072\",\"H001047\",\"H001091\",\"H001074\",\"H001066\",\"H001085\",\"H000874\",\"H001067\",\"H001068\",\"H001058\",\"I000056\",\"J000304\",\"J000032\",\"J000305\",\"J000020\",\"J000298\",\"J000294\",\"J000288\",\"J000299\",\"J000292\",\"J000301\",\"J000126\",\"J000306\",\"J000289\",\"J000295\",\"J000302\",\"K000396\",\"K000009\",\"K000386\",\"K000375\",\"K000395\",\"K000385\",\"K000388\",\"K000376\",\"K000389\",\"K000380\",\"K000381\",\"K000397\",\"K000394\",\"K000188\",\"K000378\",\"K000368\",\"K000391\",\"K000382\",\"K000392\",\"L000585\",\"L000578\",\"L000588\",\"L000564\",\"L000559\",\"L000560\",\"L000557\",\"L000566\",\"L000266\",\"L000581\",\"L000586\",\"L000551\",\"L000590\",\"L000273\",\"L000589\",\"L000595\",\"L000593\",\"L000592\",\"L000582\",\"L000397\",\"L000576\",\"L000583\",\"L000579\",\"L000491\",\"L000569\",\"L000591\",\"L000562\",\"M000194\",\"M001203\",\"M000317\",\"M000087\",\"M001185\",\"M000871\",\"M001135\",\"M001184\",\"M001199\",\"M001163\",\"M001208\",\"M001165\",\"M001157\",\"M001136\",\"M001177\",\"M001143\",\"M001200\",\"M000312\",\"M001156\",\"M001180\",\"M001166\",\"M001137\",\"M001186\",\"M001188\",\"M001204\",\"M000687\",\"M001211\",\"M001205\",\"M001215\",\"M001194\",\"M001195\",\"M001212\",\"M001213\",\"M001160\",\"M001206\",\"M001196\",\"M001214\",\"M001190\",\"M001202\",\"M001210\",\"N000002\",\"N000179\",\"N000015\",\"N000191\",\"N000026\",\"N000189\",\"N000192\",\"N000188\",\"N000190\",\"N000181\",\"O000171\",\"O000019\",\"O000172\",\"O000173\",\"O000086\",\"P000601\",\"P000034\",\"P000609\",\"P000613\",\"P000614\",\"P000096\",\"P000604\",\"P000615\",\"P000593\",\"P000605\",\"P000608\",\"P000048\",\"P000616\",\"P000597\",\"P000607\",\"P000618\",\"P000599\",\"P000617\",\"P000523\",\"Q000023\",\"R000606\",\"R000585\",\"R000610\",\"R000602\",\"R000597\",\"M001159\",\"R000575\",\"R000395\",\"R000612\",\"R000103\",\"R000305\",\"R000603\",\"R000614\",\"R000486\",\"R000599\",\"R000576\",\"R000515\",\"R000609\",\"R000577\",\"S000168\",\"S001156\",\"S001168\",\"S001176\",\"S001205\",\"S001145\",\"S001150\",\"S001190\",\"S001180\",\"S001216\",\"S001183\",\"S000185\",\"S001189\",\"S001157\",\"S000250\",\"S001185\",\"S000344\",\"S001207\",\"S001148\",\"S001165\",\"S001208\",\"S001195\",\"S001172\",\"S000522\",\"S000510\",\"S001199\",\"S001200\",\"S001209\",\"S000929\",\"S001175\",\"S001218\",\"S001211\",\"S001212\",\"S001135\",\"S001196\",\"S001213\",\"S001214\",\"S001215\",\"S001192\",\"S001159\",\"S001201\",\"S001193\",\"T000472\",\"T000479\",\"T000478\",\"T000460\",\"T000193\",\"T000467\",\"T000165\",\"T000480\",\"T000468\",\"T000481\",\"T000469\",\"T000474\",\"T000486\",\"T000482\",\"T000483\",\"T000463\",\"U000040\",\"U000031\",\"V000129\",\"V000133\",\"V000134\",\"V000130\",\"V000131\",\"V000132\",\"V000081\",\"W000812\",\"W000798\",\"W000813\",\"W000823\",\"W000797\",\"W000187\",\"W000822\",\"W000814\",\"W000806\",\"W000800\",\"W000815\",\"W000821\",\"W000825\",\"W000826\",\"W000788\",\"W000816\",\"W000808\",\"W000795\",\"W000804\",\"W000809\",\"Y000062\",\"Y000033\",\"Z000017\"],\"sort_field\":[\"Adams\",\"Aderholt\",\"Aguilar\",\"Allen\",\"Allred\",\"Amodei\",\"Armstrong\",\"Arrington\",\"Auchincloss\",\"Axne\",\"Babin\",\"Bacon\",\"Baird\",\"Balderson\",\"Banks\",\"Barr\",\"Barragan\",\"Bass\",\"Beatty\",\"Bentz\",\"Bera\",\"Bergman\",\"Beyer\",\"Bice (OK)\",\"Biggs\",\"Bilirakis\",\"Bishop (GA)\",\"Bishop (NC)\",\"Blumenauer\",\"Blunt Rochester\",\"Boebert\",\"Bonamici\",\"Bost\",\"Bourdeaux\",\"Bowman\",\"Boyle, Brendan F.\",\"Brady\",\"Brooks\",\"Brown\",\"Brownley\",\"Buchanan\",\"Buck\",\"Bucshon\",\"Budd\",\"Burchett\",\"Burgess\",\"Bush\",\"Bustos\",\"Butterfield\",\"Calvert\",\"Cammack\",\"Carbajal\",\"Cardenas\",\"Carl\",\"Carson\",\"Carter (GA)\",\"Carter (LA)\",\"Carter (TX)\",\"Cartwright\",\"Case\",\"Casten\",\"Castor (FL)\",\"Castro (TX)\",\"Cawthorn\",\"Chabot\",\"Cheney\",\"Chu\",\"Cicilline\",\"Clark (MA)\",\"Clarke (NY)\",\"Cleaver\",\"Cline\",\"Cloud\",\"Clyburn\",\"Clyde\",\"Cohen\",\"Cole\",\"Comer\",\"Connolly\",\"Cooper\",\"Correa\",\"Costa\",\"Courtney\",\"Craig\",\"Crawford\",\"Crenshaw\",\"Crist\",\"Crow\",\"Cuellar\",\"Curtis\",\"Davids (KS)\",\"Davidson\",\"Davis, Danny K.\",\"Davis, Rodney\",\"Dean\",\"DeFazio\",\"DeGette\",\"DeLauro\",\"DelBene\",\"Delgado\",\"Demings\",\"DeSaulnier\",\"DesJarlais\",\"Deutch\",\"Diaz-Balart\",\"Dingell\",\"Doggett\",\"Donalds\",\"Doyle, Michael F.\",\"Duncan\",\"Dunn\",\"Emmer\",\"Escobar\",\"Eshoo\",\"Espaillat\",\"Estes\",\"Evans\",\"Fallon\",\"Feenstra\",\"Ferguson\",\"Fischbach\",\"Fitzgerald\",\"Fitzpatrick\",\"Fleischmann\",\"Fletcher\",\"Fortenberry\",\"Foster\",\"Foxx\",\"Frankel, Lois\",\"Franklin, C. Scott\",\"Fulcher\",\"Gaetz\",\"Gallagher\",\"Gallego\",\"Garamendi\",\"Garbarino\",\"Garcia (CA)\",\"Garcia (IL)\",\"Garcia (TX)\",\"Gibbs\",\"Gimenez\",\"Gohmert\",\"Golden\",\"Gomez\",\"Gonzales, Tony\",\"Gonzalez (OH)\",\"Gonzalez, Vicente\",\"Good (VA)\",\"Gooden (TX)\",\"Gosar\",\"Gottheimer\",\"Granger\",\"Graves (LA)\",\"Graves (MO)\",\"Green (TN)\",\"Green, Al (TX)\",\"Greene (GA)\",\"Griffith\",\"Grijalva\",\"Grothman\",\"Guest\",\"Guthrie\",\"Hagedorn\",\"Harder (CA)\",\"Harris\",\"Harshbarger\",\"Hartzler\",\"Hayes\",\"Hern\",\"Herrell\",\"Herrera Beutler\",\"Hice (GA)\",\"Higgins (LA)\",\"Higgins (NY)\",\"Hill\",\"Himes\",\"Hinson\",\"Hollingsworth\",\"Horsford\",\"Houlahan\",\"Hoyer\",\"Hudson\",\"Huffman\",\"Huizenga\",\"Issa\",\"Jackson\",\"Jackson Lee\",\"Jacobs (CA)\",\"Jacobs (NY)\",\"Jayapal\",\"Jeffries\",\"Johnson (GA)\",\"Johnson (LA)\",\"Johnson (OH)\",\"Johnson (SD)\",\"Johnson (TX)\",\"Jones\",\"Jordan\",\"Joyce (OH)\",\"Joyce (PA)\",\"Kahele\",\"Kaptur\",\"Katko\",\"Keating\",\"Keller\",\"Kelly (IL)\",\"Kelly (MS)\",\"Kelly (PA)\",\"Khanna\",\"Kildee\",\"Kilmer\",\"Kim (CA)\",\"Kim (NJ)\",\"Kind\",\"Kinzinger\",\"Kirkpatrick\",\"Krishnamoorthi\",\"Kuster\",\"Kustoff\",\"LaHood\",\"LaMalfa\",\"Lamb\",\"Lamborn\",\"Langevin\",\"Larsen (WA)\",\"Larson (CT)\",\"Latta\",\"LaTurner\",\"Lawrence\",\"Lawson (FL)\",\"Lee (CA)\",\"Lee (NV)\",\"Leger Fernandez\",\"Lesko\",\"Letlow\",\"Levin (CA)\",\"Levin (MI)\",\"Lieu\",\"Lofgren\",\"Long\",\"Loudermilk\",\"Lowenthal\",\"Lucas\",\"Luetkemeyer\",\"Luria\",\"Lynch\",\"Mace\",\"Malinowski\",\"Malliotakis\",\"Maloney, Carolyn B.\",\"Maloney, Sean\",\"Mann\",\"Manning\",\"Massie\",\"Mast\",\"Matsui\",\"McBath\",\"McCarthy\",\"McCaul\",\"McClain\",\"McClintock\",\"McCollum\",\"McEachin\",\"McGovern\",\"McHenry\",\"McKinley\",\"McNerney\",\"Meeks\",\"Meijer\",\"Meng\",\"Meuser\",\"Mfume\",\"Miller (IL)\",\"Miller (WV)\",\"Miller-Meeks\",\"Moolenaar\",\"Mooney\",\"Moore (AL)\",\"Moore (UT)\",\"Moore (WI)\",\"Morelle\",\"Moulton\",\"Mrvan\",\"Mullin\",\"Murphy (FL)\",\"Murphy (NC)\",\"Nadler\",\"Napolitano\",\"Neal\",\"Neguse\",\"Nehls\",\"Newhouse\",\"Newman\",\"Norcross\",\"Norman\",\"Nunes\",\"O'Halleran\",\"Obernolte\",\"Ocasio-Cortez\",\"Omar\",\"Owens\",\"Palazzo\",\"Pallone\",\"Palmer\",\"Panetta\",\"Pappas\",\"Pascrell\",\"Payne\",\"Pence\",\"Perlmutter\",\"Perry\",\"Peters\",\"Pfluger\",\"Phillips\",\"Pingree\",\"Pocan\",\"Porter\",\"Posey\",\"Pressley\",\"Price (NC)\",\"Quigley\",\"Raskin\",\"Reed\",\"Reschenthaler\",\"Rice (NY)\",\"Rice (SC)\",\"Rodgers (WA)\",\"Rogers (AL)\",\"Rogers (KY)\",\"Rose\",\"Rosendale\",\"Ross\",\"Rouzer\",\"Roy\",\"Roybal-Allard\",\"Ruiz\",\"Ruppersberger\",\"Rush\",\"Rutherford\",\"Ryan\",\"Salazar\",\"Sanchez\",\"Sarbanes\",\"Scalise\",\"Scanlon\",\"Schakowsky\",\"Schiff\",\"Schneider\",\"Schrader\",\"Schrier\",\"Schweikert\",\"Scott (VA)\",\"Scott, Austin\",\"Scott, David\",\"Sessions\",\"Sewell\",\"Sherman\",\"Sherrill\",\"Simpson\",\"Sires\",\"Slotkin\",\"Smith (MO)\",\"Smith (NE)\",\"Smith (NJ)\",\"Smith (WA)\",\"Smucker\",\"Soto\",\"Spanberger\",\"Spartz\",\"Speier\",\"Stansbury\",\"Stanton\",\"Stauber\",\"Steel\",\"Stefanik\",\"Steil\",\"Steube\",\"Stevens\",\"Stewart\",\"Strickland\",\"Suozzi\",\"Swalwell\",\"Takano\",\"Taylor\",\"Tenney\",\"Thompson (CA)\",\"Thompson (MS)\",\"Thompson (PA)\",\"Tiffany\",\"Timmons\",\"Titus\",\"Tlaib\",\"Tonko\",\"Torres (CA)\",\"Torres (NY)\",\"Trahan\",\"Trone\",\"Turner\",\"Underwood\",\"Upton\",\"Valadao\",\"Van Drew\",\"Van Duyne\",\"Vargas\",\"Veasey\",\"Vela\",\"Velazquez\",\"Wagner\",\"Walberg\",\"Walorski\",\"Waltz\",\"Wasserman Schultz\",\"Waters\",\"Watson Coleman\",\"Weber (TX)\",\"Webster (FL)\",\"Welch\",\"Wenstrup\",\"Westerman\",\"Wexton\",\"Wild\",\"Williams (GA)\",\"Williams (TX)\",\"Wilson (FL)\",\"Wilson (SC)\",\"Wittman\",\"Womack\",\"Yarmuth\",\"Young\",\"Zeldin\"],\"unaccented_name\":[\"Adams\",\"Aderholt\",\"Aguilar\",\"Allen\",\"Allred\",\"Amodei\",\"Armstrong\",\"Arrington\",\"Auchincloss\",\"Axne\",\"Babin\",\"Bacon\",\"Baird\",\"Balderson\",\"Banks\",\"Barr\",\"Barragan\",\"Bass\",\"Beatty\",\"Bentz\",\"Bera\",\"Bergman\",\"Beyer\",\"Bice (OK)\",\"Biggs\",\"Bilirakis\",\"Bishop (GA)\",\"Bishop (NC)\",\"Blumenauer\",\"Blunt Rochester\",\"Boebert\",\"Bonamici\",\"Bost\",\"Bourdeaux\",\"Bowman\",\"Boyle, Brendan F.\",\"Brady\",\"Brooks\",\"Brown\",\"Brownley\",\"Buchanan\",\"Buck\",\"Bucshon\",\"Budd\",\"Burchett\",\"Burgess\",\"Bush\",\"Bustos\",\"Butterfield\",\"Calvert\",\"Cammack\",\"Carbajal\",\"Cardenas\",\"Carl\",\"Carson\",\"Carter (GA)\",\"Carter (LA)\",\"Carter (TX)\",\"Cartwright\",\"Case\",\"Casten\",\"Castor (FL)\",\"Castro (TX)\",\"Cawthorn\",\"Chabot\",\"Cheney\",\"Chu\",\"Cicilline\",\"Clark (MA)\",\"Clarke (NY)\",\"Cleaver\",\"Cline\",\"Cloud\",\"Clyburn\",\"Clyde\",\"Cohen\",\"Cole\",\"Comer\",\"Connolly\",\"Cooper\",\"Correa\",\"Costa\",\"Courtney\",\"Craig\",\"Crawford\",\"Crenshaw\",\"Crist\",\"Crow\",\"Cuellar\",\"Curtis\",\"Davids (KS)\",\"Davidson\",\"Davis, Danny K.\",\"Davis, Rodney\",\"Dean\",\"DeFazio\",\"DeGette\",\"DeLauro\",\"DelBene\",\"Delgado\",\"Demings\",\"DeSaulnier\",\"DesJarlais\",\"Deutch\",\"Diaz-Balart\",\"Dingell\",\"Doggett\",\"Donalds\",\"Doyle, Michael F.\",\"Duncan\",\"Dunn\",\"Emmer\",\"Escobar\",\"Eshoo\",\"Espaillat\",\"Estes\",\"Evans\",\"Fallon\",\"Feenstra\",\"Ferguson\",\"Fischbach\",\"Fitzgerald\",\"Fitzpatrick\",\"Fleischmann\",\"Fletcher\",\"Fortenberry\",\"Foster\",\"Foxx\",\"Frankel, Lois\",\"Franklin, C. Scott\",\"Fulcher\",\"Gaetz\",\"Gallagher\",\"Gallego\",\"Garamendi\",\"Garbarino\",\"Garcia (CA)\",\"Garcia (IL)\",\"Garcia (TX)\",\"Gibbs\",\"Gimenez\",\"Gohmert\",\"Golden\",\"Gomez\",\"Gonzales, Tony\",\"Gonzalez (OH)\",\"Gonzalez, Vicente\",\"Good (VA)\",\"Gooden (TX)\",\"Gosar\",\"Gottheimer\",\"Granger\",\"Graves (LA)\",\"Graves (MO)\",\"Green (TN)\",\"Green, Al (TX)\",\"Greene (GA)\",\"Griffith\",\"Grijalva\",\"Grothman\",\"Guest\",\"Guthrie\",\"Hagedorn\",\"Harder (CA)\",\"Harris\",\"Harshbarger\",\"Hartzler\",\"Hayes\",\"Hern\",\"Herrell\",\"Herrera Beutler\",\"Hice (GA)\",\"Higgins (LA)\",\"Higgins (NY)\",\"Hill\",\"Himes\",\"Hinson\",\"Hollingsworth\",\"Horsford\",\"Houlahan\",\"Hoyer\",\"Hudson\",\"Huffman\",\"Huizenga\",\"Issa\",\"Jackson\",\"Jackson Lee\",\"Jacobs (CA)\",\"Jacobs (NY)\",\"Jayapal\",\"Jeffries\",\"Johnson (GA)\",\"Johnson (LA)\",\"Johnson (OH)\",\"Johnson (SD)\",\"Johnson (TX)\",\"Jones\",\"Jordan\",\"Joyce (OH)\",\"Joyce (PA)\",\"Kahele\",\"Kaptur\",\"Katko\",\"Keating\",\"Keller\",\"Kelly (IL)\",\"Kelly (MS)\",\"Kelly (PA)\",\"Khanna\",\"Kildee\",\"Kilmer\",\"Kim (CA)\",\"Kim (NJ)\",\"Kind\",\"Kinzinger\",\"Kirkpatrick\",\"Krishnamoorthi\",\"Kuster\",\"Kustoff\",\"LaHood\",\"LaMalfa\",\"Lamb\",\"Lamborn\",\"Langevin\",\"Larsen (WA)\",\"Larson (CT)\",\"Latta\",\"LaTurner\",\"Lawrence\",\"Lawson (FL)\",\"Lee (CA)\",\"Lee (NV)\",\"Leger Fernandez\",\"Lesko\",\"Letlow\",\"Levin (CA)\",\"Levin (MI)\",\"Lieu\",\"Lofgren\",\"Long\",\"Loudermilk\",\"Lowenthal\",\"Lucas\",\"Luetkemeyer\",\"Luria\",\"Lynch\",\"Mace\",\"Malinowski\",\"Malliotakis\",\"Maloney, Carolyn B.\",\"Maloney, Sean\",\"Mann\",\"Manning\",\"Massie\",\"Mast\",\"Matsui\",\"McBath\",\"McCarthy\",\"McCaul\",\"McClain\",\"McClintock\",\"McCollum\",\"McEachin\",\"McGovern\",\"McHenry\",\"McKinley\",\"McNerney\",\"Meeks\",\"Meijer\",\"Meng\",\"Meuser\",\"Mfume\",\"Miller (IL)\",\"Miller (WV)\",\"Miller-Meeks\",\"Moolenaar\",\"Mooney\",\"Moore (AL)\",\"Moore (UT)\",\"Moore (WI)\",\"Morelle\",\"Moulton\",\"Mrvan\",\"Mullin\",\"Murphy (FL)\",\"Murphy (NC)\",\"Nadler\",\"Napolitano\",\"Neal\",\"Neguse\",\"Nehls\",\"Newhouse\",\"Newman\",\"Norcross\",\"Norman\",\"Nunes\",\"O'Halleran\",\"Obernolte\",\"Ocasio-Cortez\",\"Omar\",\"Owens\",\"Palazzo\",\"Pallone\",\"Palmer\",\"Panetta\",\"Pappas\",\"Pascrell\",\"Payne\",\"Pence\",\"Perlmutter\",\"Perry\",\"Peters\",\"Pfluger\",\"Phillips\",\"Pingree\",\"Pocan\",\"Porter\",\"Posey\",\"Pressley\",\"Price (NC)\",\"Quigley\",\"Raskin\",\"Reed\",\"Reschenthaler\",\"Rice (NY)\",\"Rice (SC)\",\"Rodgers (WA)\",\"Rogers (AL)\",\"Rogers (KY)\",\"Rose\",\"Rosendale\",\"Ross\",\"Rouzer\",\"Roy\",\"Roybal-Allard\",\"Ruiz\",\"Ruppersberger\",\"Rush\",\"Rutherford\",\"Ryan\",\"Salazar\",\"Sanchez\",\"Sarbanes\",\"Scalise\",\"Scanlon\",\"Schakowsky\",\"Schiff\",\"Schneider\",\"Schrader\",\"Schrier\",\"Schweikert\",\"Scott (VA)\",\"Scott, Austin\",\"Scott, David\",\"Sessions\",\"Sewell\",\"Sherman\",\"Sherrill\",\"Simpson\",\"Sires\",\"Slotkin\",\"Smith (MO)\",\"Smith (NE)\",\"Smith (NJ)\",\"Smith (WA)\",\"Smucker\",\"Soto\",\"Spanberger\",\"Spartz\",\"Speier\",\"Stansbury\",\"Stanton\",\"Stauber\",\"Steel\",\"Stefanik\",\"Steil\",\"Steube\",\"Stevens\",\"Stewart\",\"Strickland\",\"Suozzi\",\"Swalwell\",\"Takano\",\"Taylor\",\"Tenney\",\"Thompson (CA)\",\"Thompson (MS)\",\"Thompson (PA)\",\"Tiffany\",\"Timmons\",\"Titus\",\"Tlaib\",\"Tonko\",\"Torres (CA)\",\"Torres (NY)\",\"Trahan\",\"Trone\",\"Turner\",\"Underwood\",\"Upton\",\"Valadao\",\"Van Drew\",\"Van Duyne\",\"Vargas\",\"Veasey\",\"Vela\",\"Velazquez\",\"Wagner\",\"Walberg\",\"Walorski\",\"Waltz\",\"Wasserman Schultz\",\"Waters\",\"Watson Coleman\",\"Weber (TX)\",\"Webster (FL)\",\"Welch\",\"Wenstrup\",\"Westerman\",\"Wexton\",\"Wild\",\"Williams (GA)\",\"Williams (TX)\",\"Wilson (FL)\",\"Wilson (SC)\",\"Wittman\",\"Womack\",\"Yarmuth\",\"Young\",\"Zeldin\"],\"partystate\":[\"NC\",\"AL\",\"CA\",\"GA\",\"TX\",\"NV\",\"ND\",\"TX\",\"MA\",\"IA\",\"TX\",\"NE\",\"IN\",\"OH\",\"IN\",\"KY\",\"CA\",\"CA\",\"OH\",\"OR\",\"CA\",\"MI\",\"VA\",\"OK\",\"AZ\",\"FL\",\"GA\",\"NC\",\"OR\",\"DE\",\"CO\",\"OR\",\"IL\",\"GA\",\"NY\",\"PA\",\"TX\",\"AL\",\"MD\",\"CA\",\"FL\",\"CO\",\"IN\",\"NC\",\"TN\",\"TX\",\"MO\",\"IL\",\"NC\",\"CA\",\"FL\",\"CA\",\"CA\",\"AL\",\"IN\",\"GA\",\"LA\",\"TX\",\"PA\",\"HI\",\"IL\",\"FL\",\"TX\",\"NC\",\"OH\",\"WY\",\"CA\",\"RI\",\"MA\",\"NY\",\"MO\",\"VA\",\"TX\",\"SC\",\"GA\",\"TN\",\"OK\",\"KY\",\"VA\",\"TN\",\"CA\",\"CA\",\"CT\",\"MN\",\"AR\",\"TX\",\"FL\",\"CO\",\"TX\",\"UT\",\"KS\",\"OH\",\"IL\",\"IL\",\"PA\",\"OR\",\"CO\",\"CT\",\"WA\",\"NY\",\"FL\",\"CA\",\"TN\",\"FL\",\"FL\",\"MI\",\"TX\",\"FL\",\"PA\",\"SC\",\"FL\",\"MN\",\"TX\",\"CA\",\"NY\",\"KS\",\"PA\",\"TX\",\"IA\",\"GA\",\"MN\",\"WI\",\"PA\",\"TN\",\"TX\",\"NE\",\"IL\",\"NC\",\"FL\",\"FL\",\"ID\",\"FL\",\"WI\",\"AZ\",\"CA\",\"NY\",\"CA\",\"IL\",\"TX\",\"OH\",\"FL\",\"TX\",\"ME\",\"CA\",\"TX\",\"OH\",\"TX\",\"VA\",\"TX\",\"AZ\",\"NJ\",\"TX\",\"LA\",\"MO\",\"TN\",\"TX\",\"GA\",\"VA\",\"AZ\",\"WI\",\"MS\",\"KY\",\"MN\",\"CA\",\"MD\",\"TN\",\"MO\",\"CT\",\"OK\",\"NM\",\"WA\",\"GA\",\"LA\",\"NY\",\"AR\",\"CT\",\"IA\",\"IN\",\"NV\",\"PA\",\"MD\",\"NC\",\"CA\",\"MI\",\"CA\",\"TX\",\"TX\",\"CA\",\"NY\",\"WA\",\"NY\",\"GA\",\"LA\",\"OH\",\"SD\",\"TX\",\"NY\",\"OH\",\"OH\",\"PA\",\"HI\",\"OH\",\"NY\",\"MA\",\"PA\",\"IL\",\"MS\",\"PA\",\"CA\",\"MI\",\"WA\",\"CA\",\"NJ\",\"WI\",\"IL\",\"AZ\",\"IL\",\"NH\",\"TN\",\"IL\",\"CA\",\"PA\",\"CO\",\"RI\",\"WA\",\"CT\",\"OH\",\"KS\",\"MI\",\"FL\",\"CA\",\"NV\",\"NM\",\"AZ\",\"LA\",\"CA\",\"MI\",\"CA\",\"CA\",\"MO\",\"GA\",\"CA\",\"OK\",\"MO\",\"VA\",\"MA\",\"SC\",\"NJ\",\"NY\",\"NY\",\"NY\",\"KS\",\"NC\",\"KY\",\"FL\",\"CA\",\"GA\",\"CA\",\"TX\",\"MI\",\"CA\",\"MN\",\"VA\",\"MA\",\"NC\",\"WV\",\"CA\",\"NY\",\"MI\",\"NY\",\"PA\",\"MD\",\"IL\",\"WV\",\"IA\",\"MI\",\"WV\",\"AL\",\"UT\",\"WI\",\"NY\",\"MA\",\"IN\",\"OK\",\"FL\",\"NC\",\"NY\",\"CA\",\"MA\",\"CO\",\"TX\",\"WA\",\"IL\",\"NJ\",\"SC\",\"CA\",\"AZ\",\"CA\",\"NY\",\"MN\",\"UT\",\"MS\",\"NJ\",\"AL\",\"CA\",\"NH\",\"NJ\",\"NJ\",\"IN\",\"CO\",\"PA\",\"CA\",\"TX\",\"MN\",\"ME\",\"WI\",\"CA\",\"FL\",\"MA\",\"NC\",\"IL\",\"MD\",\"NY\",\"PA\",\"NY\",\"SC\",\"WA\",\"AL\",\"KY\",\"TN\",\"MT\",\"NC\",\"NC\",\"TX\",\"CA\",\"CA\",\"MD\",\"IL\",\"FL\",\"OH\",\"FL\",\"CA\",\"MD\",\"LA\",\"PA\",\"IL\",\"CA\",\"IL\",\"OR\",\"WA\",\"AZ\",\"VA\",\"GA\",\"GA\",\"TX\",\"AL\",\"CA\",\"NJ\",\"ID\",\"NJ\",\"MI\",\"MO\",\"NE\",\"NJ\",\"WA\",\"PA\",\"FL\",\"VA\",\"IN\",\"CA\",\"NM\",\"AZ\",\"MN\",\"CA\",\"NY\",\"WI\",\"FL\",\"MI\",\"UT\",\"WA\",\"NY\",\"CA\",\"CA\",\"TX\",\"NY\",\"CA\",\"MS\",\"PA\",\"WI\",\"SC\",\"NV\",\"MI\",\"NY\",\"CA\",\"NY\",\"MA\",\"MD\",\"OH\",\"IL\",\"MI\",\"CA\",\"NJ\",\"TX\",\"CA\",\"TX\",\"TX\",\"NY\",\"MO\",\"MI\",\"IN\",\"FL\",\"FL\",\"CA\",\"NJ\",\"TX\",\"FL\",\"VT\",\"OH\",\"AR\",\"VA\",\"PA\",\"GA\",\"TX\",\"FL\",\"SC\",\"VA\",\"AR\",\"KY\",\"AK\",\"NY\"],\"role\":[\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\",\"legislator\"],\"vote\":[\"Yea\",\"Nay\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Nay\",\"Nay\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Nay\",\"Nay\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Nay\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Not Voting\",\"Not Voting\",\"Nay\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Nay\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Nay\",\"Nay\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Nay\",\"Not Voting\",\"Nay\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Nay\",\"Nay\",\"Yea\",\"Yea\",\"Nay\",\"Nay\",\"Nay\",\"Yea\",\"Nay\",\"Nay\",\"Yea\",\"Nay\",\"Not Voting\",\"Yea\",\"Nay\",\"Yea\",\"Nay\",\"Nay\",\"Not Voting\",\"Yea\",\"Nay\",\"Nay\",\"Yea\",\"Not Voting\",\"Not Voting\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Nay\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Nay\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Nay\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Not Voting\",\"Nay\",\"Nay\",\"Yea\",\"Yea\",\"Nay\",\"Nay\",\"Not Voting\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Nay\",\"Yea\",\"Nay\",\"Yea\",\"Not Voting\",\"Nay\",\"Yea\",\"Nay\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Not Voting\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Nay\",\"Yea\",\"Nay\",\"Nay\",\"Yea\",\"Yea\",\"Yea\",\"Nay\"]}],\"party_votes\":[{\"party\":[\"Republican\",\"Democratic\",\"Independent\"],\"yea_total\":[90,217,0],\"nay_total\":[112,0,0],\"present_total\":[0,0,0],\"not_voting_total\":[9,2,0]}]}],\"roll_found\":[true]}],\"senate_votes\":[{\"roll_number\":[],\"url\":[],\"full_action_name\":[],\"chamber\":[],\"date\":[],\"session_number\":[],\"vote_roll\":[],\"roll_found\":[]}],\"actions\":[{\"action_date\":[\"2021-07-12\",\"2021-06-28\",\"2021-06-28\",\"2021-06-28\",\"2021-06-28\",\"2021-06-28\",\"2021-06-28\",\"2021-06-28\",\"2021-06-28\",\"2021-03-25\",\"2021-03-25\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\"],\"action_committee_system_code\":[\"ssfr00\",null,null,null,null,null,null,null,null,\"hsfa00\",\"hsfa00\",\"hsfa00\",null,null],\"action_committee_name\":[\"Foreign Relations Committee\",null,null,null,null,null,null,null,null,\"Foreign Affairs Committee\",\"Foreign Affairs Committee\",\"Foreign Affairs Committee\",null,null],\"action_source_code\":[\"0\",\"2\",\"2\",\"9\",\"2\",\"2\",\"2\",\"2\",\"2\",\"1\",\"1\",\"2\",\"9\",\"9\"],\"action_source_name\":[\"Senate\",\"House floor actions\",\"House floor actions\",\"Library of Congress\",\"House floor actions\",\"House floor actions\",\"House floor actions\",\"House floor actions\",\"House floor actions\",\"House committee actions\",\"House committee actions\",\"House floor actions\",\"Library of Congress\",\"Library of Congress\"],\"action_text\":[\"Received in the Senate and Read twice and referred to the Committee on Foreign Relations.\",\"Motion to reconsider laid on the table Agreed to without objection.\",\"On motion to suspend the rules and pass the bill, as amended Agreed to by the Yeas and Nays: (2/3 required): 307 - 112 (Roll no. 188). (text: CR H3165-3169)\",\"Passed/agreed to in House: On motion to suspend the rules and pass the bill, as amended Agreed to by the Yeas and Nays: (2/3 required): 307 - 112 (Roll no. 188).(text: CR H3165-3169)\",\"Considered as unfinished business. (consideration: CR H3224-3225)\",\"At the conclusion of debate, the Yeas and Nays were demanded and ordered. Pursuant to the provisions of clause 8, rule XX, the Chair announced that further proceedings on the motion would be postponed.\",\"DEBATE - The House proceeded with forty minutes of debate on H.R. 391.\",\"Considered under suspension of the rules. (consideration: CR H3165-3171)\",\"Mr. Meeks moved to suspend the rules and pass the bill, as amended.\",\"Ordered to be Reported (Amended) by Voice Vote.\",\"Committee Consideration and Mark-up Session Held.\",\"Referred to the House Committee on Foreign Affairs.\",\"Introduced in House\",\"Introduced in House\"],\"action_type\":[\"IntroReferral\",\"Floor\",\"Floor\",\"Floor\",\"Floor\",\"Floor\",\"Floor\",\"Floor\",\"Floor\",\"Committee\",\"Committee\",\"IntroReferral\",\"IntroReferral\",\"IntroReferral\"],\"action_time\":[null,\"19:46:03\",\"19:46:02\",\"19:46:02\",\"19:24:39\",\"15:20:02\",\"15:05:31\",\"15:05:26\",\"15:05:13\",null,null,null,null,null],\"action_code\":[null,\"H38310\",\"H37300\",\"8000\",\"H30000\",\"H37220\",\"H8D000\",\"H30000\",\"H30300\",null,null,\"H11100\",\"Intro-H\",\"1000\"]}],\"action_counts\":[{\"action\":[\"referredToCommittee\",\"motionToReconsiderResults\",\"finalPassageUnderSuspensionOfTheRulesResults\",\"passedAgreedToInHouse\",\"considerationByHouse\",\"placeholderTextForH\",\"generalDebate\",\"motionMadeToSuspendTheRules\",\"orderedToBeReported\",\"committeeConsiderationMarkUp\",\"billReferrals\",\"introducedInTheHouse\",\"introducedInHouse\",\"senate\",\"houseOfRepresentatives\"],\"count\":[1,1,1,1,2,1,1,1,1,1,1,1,1,1,13]}],\"sponsors\":[{\"sponsor_bioguide_id\":[\"C001078\"],\"sponsor_full_name\":[\"Rep. Connolly, Gerald E. [D-VA-11]\"],\"sponsor_first_name\":[\"Gerald\"],\"sponsor_middle_name\":[\"E.\"],\"sponsor_last_name\":[\"Connolly\"],\"sponsor_party\":[\"D\"],\"sponsor_state\":[\"VA\"],\"sponsor_identifiers_lis_id\":[\"1959\"],\"sponsor_identifiers_bioguide_id\":[\"C001078\"],\"sponsor_identifiers_gpo_id\":[\"8202\"],\"sponsor_district\":[\"11\"]}],\"cosponsors\":[{\"cosponsor_bioguide_id\":[\"C000266\",\"W000812\",\"B001287\",\"F000466\",\"L000560\",\"B001270\",\"B001281\",\"B001292\",\"B001303\",\"B001285\",\"C001090\",\"C001055\",\"C001117\",\"C001084\",\"C001061\",\"C001053\",\"C000754\",\"C001059\",\"D000631\",\"D000191\",\"D000610\",\"E000297\",\"F000462\",\"G000581\",\"H000324\",\"H001081\",\"H001085\",\"J000032\",\"K000375\",\"K000389\",\"K000381\",\"L000559\",\"L000592\",\"L000582\",\"L000562\",\"M001203\",\"M000312\",\"M001188\",\"N000147\",\"P000616\",\"R000515\",\"M001185\",\"S001185\",\"S000344\",\"S001165\",\"S001200\",\"S001209\",\"S001201\",\"T000468\",\"T000469\",\"T000482\",\"T000483\",\"W000822\",\"W000825\",\"W000795\",\"S001156\",\"D000623\",\"N000179\",\"C001080\",\"H001090\",\"C001068\",\"F000468\",\"O000173\",\"S001204\",\"A000148\",\"G000551\",\"C001072\",\"R000576\",\"S001190\",\"A000376\",\"R000606\",\"P000617\",\"K000396\",\"K000397\",\"J000305\",\"L000397\",\"W000788\"],\"cosponsor_full_name\":[\"Rep. Chabot, Steve [R-OH-1]\",\"Rep. Wagner, Ann [R-MO-2]\",\"Rep. Bera, Ami [D-CA-7]\",\"Rep. Fitzpatrick, Brian K. [R-PA-1]\",\"Rep. Larsen, Rick [D-WA-2]\",\"Rep. Bass, Karen [D-CA-37]\",\"Rep. Beatty, Joyce [D-OH-3]\",\"Rep. Beyer, Donald S., Jr. [D-VA-8]\",\"Rep. Blunt Rochester, Lisa [D-DE-At Large]\",\"Rep. Brownley, Julia [D-CA-26]\",\"Rep. Cartwright, Matt [D-PA-8]\",\"Rep. Case, Ed [D-HI-1]\",\"Rep. Casten, Sean [D-IL-6]\",\"Rep. Cicilline, David N. [D-RI-1]\",\"Rep. Cleaver, Emanuel [D-MO-5]\",\"Rep. Cole, Tom [R-OK-4]\",\"Rep. Cooper, Jim [D-TN-5]\",\"Rep. Costa, Jim [D-CA-16]\",\"Rep. Dean, Madeleine [D-PA-4]\",\"Rep. DeFazio, Peter A. [D-OR-4]\",\"Rep. Deutch, Theodore E. [D-FL-22]\",\"Rep. Espaillat, Adriano [D-NY-13]\",\"Rep. Frankel, Lois [D-FL-21]\",\"Rep. Gonzalez, Vicente [D-TX-15]\",\"Rep. Hastings, Alcee L. [D-FL-20]\",\"Rep. Hayes, Jahana [D-CT-5]\",\"Rep. Houlahan, Chrissy [D-PA-6]\",\"Rep. Jackson Lee, Sheila [D-TX-18]\",\"Rep. Keating, William R. [D-MA-9]\",\"Rep. Khanna, Ro [D-CA-17]\",\"Rep. Kilmer, Derek [D-WA-6]\",\"Rep. Langevin, James R. [D-RI-2]\",\"Rep. Levin, Andy [D-MI-9]\",\"Rep. Lieu, Ted [D-CA-33]\",\"Rep. Lynch, Stephen F. [D-MA-8]\",\"Rep. Malinowski, Tom [D-NJ-7]\",\"Rep. McGovern, James P. [D-MA-2]\",\"Rep. Meng, Grace [D-NY-6]\",\"Del. Norton, Eleanor Holmes [D-DC-At Large]\",\"Rep. Phillips, Dean [D-MN-3]\",\"Rep. Rush, Bobby L. [D-IL-1]\",\"Rep. Maloney, Sean Patrick [D-NY-18]\",\"Rep. Sewell, Terri A. [D-AL-7]\",\"Rep. Sherman, Brad [D-CA-30]\",\"Rep. Sires, Albio [D-NJ-8]\",\"Rep. Soto, Darren [D-FL-9]\",\"Rep. Spanberger, Abigail Davis [D-VA-7]\",\"Rep. Suozzi, Thomas R. [D-NY-3]\",\"Rep. Titus, Dina [D-NV-1]\",\"Rep. Tonko, Paul [D-NY-20]\",\"Rep. Trahan, Lori [D-MA-3]\",\"Rep. Trone, David J. [D-MD-6]\",\"Rep. Watson Coleman, Bonnie [D-NJ-12]\",\"Rep. Wexton, Jennifer [D-VA-10]\",\"Rep. Wilson, Joe [R-SC-2]\",\"Rep. Sánchez, Linda T. [D-CA-38]\",\"Rep. DeSaulnier, Mark [D-CA-11]\",\"Rep. Napolitano, Grace F. [D-CA-32]\",\"Rep. Chu, Judy [D-CA-27]\",\"Rep. Harder, Josh [D-CA-10]\",\"Rep. Cohen, Steve [D-TN-9]\",\"Rep. Fletcher, Lizzie [D-TX-7]\",\"Rep. Omar, Ilhan [D-MN-5]\",\"Del. San Nicolas, Michael F. Q. [D-GU-At Large]\",\"Rep. Auchincloss, Jake [D-MA-4]\",\"Rep. Grijalva, Raúl M. [D-AZ-3]\",\"Rep. Carson, Andre [D-IN-7]\",\"Rep. Ruppersberger, C. A. Dutch [D-MD-2]\",\"Rep. Schneider, Bradley Scott [D-IL-10]\",\"Rep. Allred, Colin Z. [D-TX-32]\",\"Rep. Raskin, Jamie [D-MD-8]\",\"Rep. Pressley, Ayanna [D-MA-7]\",\"Rep. Kahele, Kaiali'i [D-HI-2]\",\"Rep. Kim, Young [R-CA-39]\",\"Rep. Jacobs, Sara [D-CA-53]\",\"Rep. Lofgren, Zoe [D-CA-19]\",\"Rep. Williams, Nikema [D-GA-5]\"],\"cosponsor_first_name\":[\"STEVE\",\"Ann\",\"Ami\",\"Brian\",\"RICK\",\"Karen\",\"Joyce\",\"Donald\",\"Lisa\",\"Julia\",\"Matt\",\"Ed\",\"Sean\",\"David\",\"Emanuel\",\"Tom\",\"JAMES\",\"Jim\",\"Madeleine\",\"PETER\",\"Theodore\",\"Adriano\",\"Lois\",\"Vicente\",\"ALCEE\",\"Jahana\",\"Chrissy\",\"SHEILA\",\"William\",\"Ro\",\"Derek\",\"JAMES\",\"Andy\",\"Ted\",\"Stephen\",\"Tom\",\"JAMES\",\"Grace\",\"ELEANOR\",\"Dean\",\"BOBBY\",\"Sean\",\"Terri\",\"BRAD\",\"Albio\",\"Darren\",\"Abigail\",\"Thomas\",\"Dina\",\"Paul\",\"Lori\",\"David\",\"Bonnie\",\"Jennifer\",\"Joe\",\"Linda\",\"Mark\",\"GRACE\",\"Judy\",\"Josh\",\"Steve\",\"Lizzie\",\"Ilhan\",\"Michael\",\"Jake\",\"Raúl\",\"Andre\",\"C. A.\",\"Bradley\",\"Colin\",\"Jamie\",\"Ayanna\",\"Kaiali'i\",\"Young\",\"Sara\",\"ZOE\",\"Nikema\"],\"cosponsor_last_name\":[\"CHABOT\",\"Wagner\",\"Bera\",\"Fitzpatrick\",\"LARSEN\",\"Bass\",\"Beatty\",\"Beyer\",\"Blunt Rochester\",\"Brownley\",\"Cartwright\",\"Case\",\"Casten\",\"Cicilline\",\"Cleaver\",\"Cole\",\"COOPER\",\"Costa\",\"Dean\",\"DEFAZIO\",\"Deutch\",\"Espaillat\",\"Frankel\",\"Gonzalez\",\"HASTINGS\",\"Hayes\",\"Houlahan\",\"JACKSON LEE\",\"Keating\",\"Khanna\",\"Kilmer\",\"LANGEVIN\",\"Levin\",\"Lieu\",\"Lynch\",\"Malinowski\",\"MCGOVERN\",\"Meng\",\"NORTON\",\"Phillips\",\"RUSH\",\"Maloney\",\"Sewell\",\"SHERMAN\",\"Sires\",\"Soto\",\"Spanberger\",\"Suozzi\",\"Titus\",\"Tonko\",\"Trahan\",\"Trone\",\"Watson Coleman\",\"Wexton\",\"Wilson\",\"Sánchez\",\"DeSaulnier\",\"NAPOLITANO\",\"Chu\",\"Harder\",\"Cohen\",\"Fletcher\",\"Omar\",\"San Nicolas\",\"Auchincloss\",\"Grijalva\",\"Carson\",\"Ruppersberger\",\"Schneider\",\"Allred\",\"Raskin\",\"Pressley\",\"Kahele\",\"Kim\",\"Jacobs\",\"LOFGREN\",\"Williams\"],\"cosponsor_party\":[\"R\",\"R\",\"D\",\"R\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"R\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"R\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"D\",\"R\",\"D\",\"D\",\"D\"],\"cosponsor_state\":[\"OH\",\"MO\",\"CA\",\"PA\",\"WA\",\"CA\",\"OH\",\"VA\",\"DE\",\"CA\",\"PA\",\"HI\",\"IL\",\"RI\",\"MO\",\"OK\",\"TN\",\"CA\",\"PA\",\"OR\",\"FL\",\"NY\",\"FL\",\"TX\",\"FL\",\"CT\",\"PA\",\"TX\",\"MA\",\"CA\",\"WA\",\"RI\",\"MI\",\"CA\",\"MA\",\"NJ\",\"MA\",\"NY\",\"DC\",\"MN\",\"IL\",\"NY\",\"AL\",\"CA\",\"NJ\",\"FL\",\"VA\",\"NY\",\"NV\",\"NY\",\"MA\",\"MD\",\"NJ\",\"VA\",\"SC\",\"CA\",\"CA\",\"CA\",\"CA\",\"CA\",\"TN\",\"TX\",\"MN\",\"GU\",\"MA\",\"AZ\",\"IN\",\"MD\",\"IL\",\"TX\",\"MD\",\"MA\",\"HI\",\"CA\",\"CA\",\"CA\",\"GA\"],\"cosponsor_identifiers_lis_id\":[186,2137,2102,2345,1675,1996,2153,2272,2313,2106,2159,1693,2398,2055,1790,1742,231,1774,2432,279,1976,2342,2119,2349,511,2386,2433,588,2025,2308,2169,1668,2408,2230,1686,2421,1504,2148,868,2413,1003,2150,1988,1526,1818,2319,2456,2341,1940,1942,2404,2406,2259,2457,1688,1757,2227,1602,1970,2377,1878,2447,2414,2393,2510,1708,1889,1728,2124,2451,2332,2405,2500,2543,2489,701,2496],\"cosponsor_identifiers_bioguide_id\":[\"C000266\",\"W000812\",\"B001287\",\"F000466\",\"L000560\",\"B001270\",\"B001281\",\"B001292\",\"B001303\",\"B001285\",\"C001090\",\"C001055\",\"C001117\",\"C001084\",\"C001061\",\"C001053\",\"C000754\",\"C001059\",\"D000631\",\"D000191\",\"D000610\",\"E000297\",\"F000462\",\"G000581\",\"H000324\",\"H001081\",\"H001085\",\"J000032\",\"K000375\",\"K000389\",\"K000381\",\"L000559\",\"L000592\",\"L000582\",\"L000562\",\"M001203\",\"M000312\",\"M001188\",\"N000147\",\"P000616\",\"R000515\",\"M001185\",\"S001185\",\"S000344\",\"S001165\",\"S001200\",\"S001209\",\"S001201\",\"T000468\",\"T000469\",\"T000482\",\"T000483\",\"W000822\",\"W000825\",\"W000795\",\"S001156\",\"D000623\",\"N000179\",\"C001080\",\"H001090\",\"C001068\",\"F000468\",\"O000173\",\"S001204\",\"A000148\",\"G000551\",\"C001072\",\"R000576\",\"S001190\",\"A000376\",\"R000606\",\"P000617\",\"K000396\",\"K000397\",\"J000305\",\"L000397\",\"W000788\"],\"cosponsor_identifiers_gpo_id\":[8091,\"NA\",\"NA\",\"NA\",8206,7838,\"NA\",\"NA\",\"NA\",\"NA\",\"NA\",\"NA\",\"NA\",8139,8013,8112,8152,7825,\"NA\",8117,7891,\"NA\",\"NA\",\"NA\",7895,\"NA\",\"NA\",8174,7975,\"NA\",\"NA\",8140,\"NA\",\"NA\",7974,\"NA\",7968,\"NA\",7871,\"NA\",7921,\"NA\",7792,7832,8055,\"NA\",\"NA\",\"NA\",7493,8082,\"NA\",\"NA\",\"NA\",\"NA\",8142,7844,\"NA\",7843,7837,\"NA\",8156,\"NA\",\"NA\",\"NA\",\"NA\",7804,7946,7977,\"NA\",\"NA\",\"NA\",\"NA\",\"NA\",\"NA\",\"NA\",7821,\"NA\"],\"cosponsor_district\":[\"1\",\"2\",\"7\",\"1\",\"2\",\"37\",\"3\",\"8\",\"0\",\"26\",\"8\",\"1\",\"6\",\"1\",\"5\",\"4\",\"5\",\"16\",\"4\",\"4\",\"22\",\"13\",\"21\",\"15\",\"20\",\"5\",\"6\",\"18\",\"9\",\"17\",\"6\",\"2\",\"9\",\"33\",\"8\",\"7\",\"2\",\"6\",\"0\",\"3\",\"1\",\"18\",\"7\",\"30\",\"8\",\"9\",\"7\",\"3\",\"1\",\"20\",\"3\",\"6\",\"12\",\"10\",\"2\",\"38\",\"11\",\"32\",\"27\",\"10\",\"9\",\"7\",\"5\",\"0\",\"4\",\"3\",\"7\",\"2\",\"10\",\"32\",\"8\",\"7\",\"2\",\"39\",\"53\",\"19\",\"5\"],\"cosponsor_sponsorship_date\":[\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-21\",\"2021-01-28\",\"2021-01-28\",\"2021-01-28\",\"2021-01-28\",\"2021-01-28\",\"2021-01-28\",\"2021-02-18\",\"2021-02-18\",\"2021-03-08\",\"2021-03-08\",\"2021-03-23\",\"2021-03-29\",\"2021-03-29\",\"2021-03-29\",\"2021-04-01\",\"2021-04-01\",\"2021-04-01\",\"2021-04-15\",\"2021-04-15\",\"2021-05-04\",\"2021-06-28\"],\"cosponsor_is_original_cosponsor\":[true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false],\"cosponsor_middle_name\":[null,null,null,\"K.\",null,null,null,\"S.\",null,null,null,null,null,\"N.\",null,null,\"H.\",null,null,\"A.\",\"E.\",null,null,null,\"L.\",null,null,null,\"R.\",null,null,\"R.\",null,null,\"F.\",null,\"P.\",null,\"HOLMES\",null,\"L.\",\"Patrick\",\"A.\",null,null,null,\"Davis\",\"R.\",null,null,null,\"J.\",null,null,null,\"T.\",null,\"F.\",null,null,null,null,null,\"F. Q.\",null,\"M.\",null,\"Dutch\",\"Scott\",\"Z.\",null,null,null,null,null,null,null]}]},\"columns\":[{\"accessor\":\"bill_id\",\"name\":\"bill_id\",\"type\":\"character\",\"show\":false},{\"accessor\":\"bill_number\",\"name\":\"Bill No.\",\"type\":\"character\",\"width\":80},{\"accessor\":\"create_date\",\"name\":\"create_date\",\"type\":\"Date\",\"format\":{\"cell\":{\"date\":true},\"aggregated\":{\"date\":true}},\"width\":100},{\"accessor\":\"update_date\",\"name\":\"update_date\",\"type\":\"Date\",\"format\":{\"cell\":{\"date\":true},\"aggregated\":{\"date\":true}},\"width\":100},{\"accessor\":\"origin_chamber\",\"name\":\"origin_chamber\",\"type\":\"character\",\"show\":false},{\"accessor\":\"bill_type\",\"name\":\"Bill type\",\"type\":\"character\",\"width\":60},{\"accessor\":\"introduced_date\",\"name\":\"introduced_date\",\"type\":\"Date\",\"format\":{\"cell\":{\"date\":true},\"aggregated\":{\"date\":true}},\"width\":130},{\"accessor\":\"congress\",\"name\":\"congress\",\"type\":\"character\",\"width\":80},{\"accessor\":\"constitutional_authority_statement_text\",\"name\":\"constitutional_authority_statement_text\",\"type\":\"character\",\"show\":false},{\"accessor\":\"title\",\"name\":\"title\",\"type\":\"character\",\"minWidth\":180},{\"accessor\":\"version\",\"name\":\"version\",\"type\":\"character\",\"show\":false,\"width\":80},{\"accessor\":\"policy_areas\",\"name\":\"policy_areas\",\"type\":\"list\",\"width\":120},{\"accessor\":\"legislative_subjects\",\"name\":\"legislative_subjects\",\"type\":\"list\",\"width\":200},{\"accessor\":\"bill_summaries\",\"name\":\"bill_summaries\",\"type\":\"list\",\"show\":false},{\"accessor\":\"bill_titles\",\"name\":\"bill_titles\",\"type\":\"list\",\"show\":false},{\"accessor\":\"bill_text_versions\",\"name\":\"bill_text_versions\",\"type\":\"list\",\"show\":false},{\"accessor\":\"latest_action_action_date\",\"name\":\"action_date\",\"type\":\"Date\",\"format\":{\"cell\":{\"date\":true},\"aggregated\":{\"date\":true}},\"width\":110},{\"accessor\":\"latest_action_text\",\"name\":\"action_text\",\"type\":\"character\",\"minWidth\":200},{\"accessor\":\"committees\",\"name\":\"committees\",\"type\":\"list\",\"minWidth\":80},{\"accessor\":\"house_votes\",\"name\":\"house_votes\",\"type\":\"list\",\"width\":80},{\"accessor\":\"senate_votes\",\"name\":\"senate_votes\",\"type\":\"list\",\"width\":80},{\"accessor\":\"actions\",\"name\":\"actions\",\"type\":\"list\",\"width\":80},{\"accessor\":\"action_counts\",\"name\":\"action_counts\",\"type\":\"list\",\"show\":false},{\"accessor\":\"sponsors\",\"name\":\"sponsors\",\"type\":\"list\",\"width\":80},{\"accessor\":\"cosponsors\",\"name\":\"cosponsors\",\"type\":\"list\",\"width\":80}],\"columnGroups\":[{\"name\":\"Latest Action\",\"columns\":[\"latest_action_action_date\",\"latest_action_text\"]},{\"name\":\"Nested Data\",\"columns\":[\"committees\",\"house_votes\",\"senate_votes\",\"actions\",\"sponsors\",\"cosponsors\"]}],\"resizable\":true,\"defaultPageSize\":10,\"paginationType\":\"numbers\",\"showPageInfo\":true,\"minRows\":1,\"compact\":true,\"nowrap\":true,\"theme\":{\"color\":\"#474d4d\",\"backgroundColor\":\"#FFFFFF\",\"borderColor\":\"#dddddd\",\"borderWidth\":\"1px\",\"stripedColor\":\"#dddddd\",\"highlightColor\":\"#f0f0f0\",\"cellPadding\":\"8px 12px\",\"style\":{\"padding\":\"16px 8px\"},\"tableStyle\":{\"fontSize\":14,\"borderBottom\":\"3px solid #222222\",\"fontFamily\":\"Noto Sans, sans-serif\"},\"headerStyle\":{\"borderWidth\":\"3px\",\"paddingTop\":\"12px\",\"verticalAlign\":\"bottom\",\"textAlign\":\"bottom\",\"background\":\"#FFFFFF\",\"textTransform\":\"uppercase\",\"borderColor\":\"#474d4d\",\"color\":\"#051414\",\"&:hover\":{\"background\":\"#dddddd\"},\"&[aria-sort='ascending'], &[aria-sort='descending']\":{\"background\":\"#5b5e5f\",\"color\":\"#FFFFFF\"},\"borderColor.1\":\"#333\",\"fontSize\":12,\"fontFamily\":\"Heebo Light, sans-serif\"},\"groupHeaderStyle\":{\"&:not(:empty)\":{\"paddingBottom\":\"3px\",\"verticalAlign\":\"bottom\",\"textAlign\":\"bottom\",\"backgroundColor\":\"#FFFFFF\",\"textTransform\":\"uppercase\",\"fontSize\":12,\"color\":\"#474d4d\"}},\"rowSelectedStyle\":{\"backgroundColor\":\"#dddddd\"},\"inputStyle\":{\"backgroundColor\":\"#FFFFFF\",\"color\":\"#474d4d\"},\"searchInputStyle\":{\"textTransform\":\"uppercase\",\"color\":\"#474d4d\",\"fontSize\":\"14px\"},\"paginationStyle\":{\"textTransform\":\"uppercase\",\"fontSize\":\"14px\"},\"pageButtonStyle\":{\"textTransform\":\"uppercase\",\"fontSize\":\"14px\"}},\"dataKey\":\"76d5b3d87bc5c90184b67b18f557b93f\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nHere's a `glimpse()` of some of the nested data:\n\n::: panel-tabset\n## Committees\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nList of 1\n $ : tibble [2 × 6] (S3: tbl_df/tbl/data.frame)\n  ..$ committee_system_code  : chr [1:2] \"ssfr00\" \"hsfa00\"\n  ..$ committee_name         : chr [1:2] \"Foreign Relations Committee\" \"Foreign Affairs Committee\"\n  ..$ committee_chamber      : chr [1:2] \"Senate\" \"House\"\n  ..$ committee_type         : chr [1:2] \"Standing\" \"Standing\"\n  ..$ committee_activities   :List of 2\n  ..$ subcommittee_activities:List of 2\n```\n:::\n:::\n\n\n## Votes\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nList of 1\n $ : tibble [1 × 8] (S3: tbl_df/tbl/data.frame)\n  ..$ roll_number     : chr \"188\"\n  ..$ url             : chr \"https://clerk.house.gov/evs/2021/roll188.xml\"\n  ..$ full_action_name: chr \"Final Passage Under Suspension of the Rules Results\"\n  ..$ chamber         : chr \"House\"\n  ..$ date            : chr \"2021-06-28T23:46:02Z\"\n  ..$ session_number  : chr \"1\"\n  ..$ vote_roll       :List of 1\n  ..$ roll_found      : logi TRUE\n```\n:::\n:::\n\n\n## Actions\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nList of 1\n $ : tibble [14 × 9] (S3: tbl_df/tbl/data.frame)\n  ..$ action_date                 : Date[1:14], format:  ...\n  ..$ action_committee_system_code: chr [1:14] \"ssfr00\" NA NA NA ...\n  ..$ action_committee_name       : chr [1:14] \"Foreign Relations Committee\" NA NA NA ...\n  ..$ action_source_code          : chr [1:14] \"0\" \"2\" \"2\" \"9\" ...\n  ..$ action_source_name          : chr [1:14] \"Senate\" \"House floor actions\" \"House floor actions\" \"Library of Congress\" ...\n  ..$ action_text                 : chr [1:14] \"Received in the Senate and Read twice and referred to the Committee on Foreign Relations.\" \"Motion to reconsider laid on the table Agreed to without objection.\" \"On motion to suspend the rules and pass the bill, as amended Agreed to by the Yeas and Nays: (2/3 required): 30\"| __truncated__ \"Passed/agreed to in House: On motion to suspend the rules and pass the bill, as amended Agreed to by the Yeas a\"| __truncated__ ...\n  ..$ action_type                 : Ord.factor w/ 6 levels \"IntroReferral\"<..: 1 3 3 3 3 3 3 3 3 2 ...\n  ..$ action_time                 : 'hms' num [1:14] NA 19:46:03 19:46:02 19:46:02 ...\n  .. ..- attr(*, \"units\")= chr \"secs\"\n  ..$ action_code                 : chr [1:14] NA \"H38310\" \"H37300\" \"8000\" ...\n```\n:::\n:::\n\n\n## Sponsors\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nList of 1\n $ : tibble [1 × 11] (S3: tbl_df/tbl/data.frame)\n  ..$ sponsor_bioguide_id            : chr \"C001078\"\n  ..$ sponsor_full_name              : chr \"Rep. Connolly, Gerald E. [D-VA-11]\"\n  ..$ sponsor_first_name             : chr \"Gerald\"\n  ..$ sponsor_middle_name            : chr \"E.\"\n  ..$ sponsor_last_name              : chr \"Connolly\"\n  ..$ sponsor_party                  : chr \"D\"\n  ..$ sponsor_state                  : chr \"VA\"\n  ..$ sponsor_identifiers_lis_id     : chr \"1959\"\n  ..$ sponsor_identifiers_bioguide_id: chr \"C001078\"\n  ..$ sponsor_identifiers_gpo_id     : chr \"8202\"\n  ..$ sponsor_district               : chr \"11\"\n```\n:::\n:::\n\n:::\n\nHow your XML is structured, and how you want to structure your tabular output will determine how you need to process the XML file. In general, this will involve the following steps:\n\n1.  Select the XML nodes you want to include in your dataset.\n2.  Convert the XML to a list.\n3.  `flatten()` the list into a data frame.\n\n::: callout-tip\n## Write Functions\n\nIf you find yourself doing similar transformations in multiple cases or copy-pasting some piece of code more than once, I would implore you to write functions because they:\n\n1.  make your code more reliable\n2.  make you think critically about how you're modifying the data\n3.  are easier to debug\n\nA good resource to start learning about writing functions is [How to Write a Function in R](https://www.earthdatascience.org/courses/earth-analytics/automate-science-workflows/write-function-r-programming/).\n:::\n\n# The simple case\n\nWhen converting XML into a data frame, one of the simplest cases to deal with is a set of nodes which each have a single value. You can think of singular nodes as the contents of a single cell in a data frame. When your data are entirely made up of nodes like this, you can convert XML to a data frame using two functions from `{XML}`:\n\n-   `xmlParse()` parses an XML file into an R structure[^9] representing the XML tree\n\n-   `xmlToDataFrame()` extracts data from an XML document directly into a data frame, but with limited flexibility\n\n[^9]: When you're working with both the `{XML}` and `{xml2}` libraries, it is important to note that their functions often rely on different object types. In the case of `xmlToDataFrame()`, it does not take `{xml_document}` or `{xml_node}` objects. If you try to use them, you'll see an error like this:\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    xmlToDataFrame(bill_xml)\n    ```\n    \n    ::: {.cell-output .cell-output-error}\n    ```\n    Error in (function (classes, fdef, mtable) : unable to find an inherited method for function 'xmlToDataFrame' for signature '\"xml_document\", \"missing\", \"missing\", \"missing\", \"missing\"'\n    ```\n    :::\n    :::\n\n\n::: callout-note\n## Note\n\nIn the example below, we need to use `getNodeSet(., [path =] \"//bill\")` to select only nodes in `<bill>`. If we just passed `bill_xml_parse`, we would get a dataframe with two rows because the top-level nodes are bill and the metadata identifier node `<dublinCore>`.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Use {XML} functions to read XML data\"}\n# First we need to use xmlParse function to create XMLDocument object\nbill_xml_parse = xmlParse(bill_xml)\n\nxmlToDataFrame(getNodeSet(bill_xml_parse, \"//bill\")) %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.details summary=\"Output of xmlToDataFrame\"}\nRows: 1\nColumns: 28\n$ billNumber                           <chr> \"391\"\n$ createDate                           <chr> \"2021-01-22T08:12:10Z\"\n$ updateDate                           <chr> \"2022-09-07T13:37:22Z\"\n$ originChamber                        <chr> \"House\"\n$ billType                             <chr> \"HR\"\n$ introducedDate                       <chr> \"2021-01-21\"\n$ congress                             <chr> \"117\"\n$ constitutionalAuthorityStatementText <chr> \"<pre>[Congressional Record Volum…\n$ recordedVotes                        <chr> \"188https://clerk.house.gov/evs/2…\n$ committees                           <chr> \"ssfr00Foreign Relations Committe…\n$ committeeReports                     <chr> \"\"\n$ relatedBills                         <chr> \"\"\n$ actions                              <chr> \"2021-07-12ssfr00Foreign Relation…\n$ sponsors                             <chr> \"C001078Rep. Connolly, Gerald E. …\n$ cosponsors                           <chr> \"C000266Rep. Chabot, Steve [R-OH-…\n$ cboCostEstimates                     <chr> \"2021-05-11T15:11:11ZH.R. 391, Gl…\n$ laws                                 <chr> \"\"\n$ notes                                <chr> \"\"\n$ policyArea                           <chr> \"International Affairs\"\n$ subjects                             <chr> \"Advisory bodiesAnimal and plant …\n$ summaries                            <chr> \"002021-01-21Introduced in House2…\n$ title                                <chr> \"Global Health Security Act of 20…\n$ titles                               <chr> \"Display TitleGlobal Health Secur…\n$ amendments                           <chr> \"\"\n$ textVersions                         <chr> \"Referred in Senate2021-07-12T04:…\n$ latestAction                         <chr> \"2021-07-12Received in the Senate…\n$ calendarNumbers                      <chr> \"\"\n$ version                              <chr> \"1.0.0\"\n```\n:::\n:::\n\n\nBecause the congressional data has elements like `committees`, `actions`, and `sponsors` which contain multiple child elements of their own, the contents are combined into single columns. When parsing nested XML like this, it might require multiple steps to get the data into a [tidy data](https://vita.had.co.nz/papers/tidy-data.html) frame.\n\nIn this case, the first step is to isolate singular elements like `billNumber` and `billType`, and deal with nested elements individually afterwards.\n\nSingular elements are nodes which meet two criteria:\n\n1.  the node does not have any child nodes of its own, and\n2.  the node is not an empty string.\n\n`xml_find_all()` finds nodes which match an [XPath](https://www.w3schools.com/xml/xml_parser.asp) (XML Path Language) expression[^10] in a similar way as regular expressions is used to match strings. As the function's help file says, \"XPath is like regular expressions for trees\".\n\n[^10]: [A very useful table of XPath syntax](https://www.w3schools.com/XML/xpath_syntax.asp){target=\"_blank\"}\n\nIn the code below the `[` expressions within the square brackets `]` are called predicates which I use to find nodes which have no children with the XPath `count` function and nodes which are not empty strings[^11]. This returns an `{xml_nodeset}` which can be coerced to a list using `as_list()`.\n\n[^11]: In the process of writing this, I discovered that using XPath made this \\~5x faster than an equivalent function in R.\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code  code-fold=\"show\"}\n    # Function to select singular child nodes from XML node\n    xml_singular_nodes = function(xml_node){\n      # Return child nodes of current node\n      child_nodes = xml_children(xml_node)\n      # Select child nodes with 0 children\n      zero_length_child_nodes = child_nodes[xml_length(child_nodes) == 0]\n      \n      # Keep the nodes which are not empty strings\n      keep(zero_length_child_nodes, ~(xml_text(.) != \"\"))\n    }\n    ```\n    :::\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    # Using XPath:\n    # singular_nodes1 = xml_find_all(bill_xml, \n    #                                 \"//bill/*[count(./*) = 0 and not(string-length(.) = 0)]\")\n    \n    # Using R function:\n    # singular_nodes2 = xml_singular_nodes(bill_node)\n    \n    # Check they are the same\n    # all.equal(singular_nodes1, singular_nodes2)\n    \n    # benchmark the two different ways of selecting nodes\n    microbenchmark::microbenchmark(\n      xml_singular_nodes = xml_singular_nodes(bill_node),\n      xml_find_all = xml_find_all(bill_xml, \"//bill/*[count(./*) = 0 and not(string-length(.) = 0)]\")\n    )\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    Unit: microseconds\n                   expr    min      lq     mean  median      uq    max neval\n     xml_singular_nodes 1040.2 1087.15 1182.637 1101.25 1131.15 7016.6   100\n           xml_find_all  200.5  211.45  231.863  220.85  242.45  463.2   100\n    ```\n    :::\n    :::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\" code-summary=\"Select non-empty child-less elements using XPath\"}\nsingular_nodes = xml_find_all(bill_xml, \n                              # //bill/* selects the child nodes in a bill\n                              \"//bill/*[count(./*) = 0 and not(string-length(.) = 0)]\")\n\n(singular_list = as_list(singular_nodes)) %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 10\n $ :List of 1\n  ..$ : chr \"391\"\n $ :List of 1\n  ..$ : chr \"2021-01-22T08:12:10Z\"\n $ :List of 1\n  ..$ : chr \"2022-09-07T13:37:22Z\"\n $ :List of 1\n  ..$ : chr \"House\"\n $ :List of 1\n  ..$ : chr \"HR\"\n $ :List of 1\n  ..$ : chr \"2021-01-21\"\n $ :List of 1\n  ..$ : chr \"117\"\n $ :List of 1\n  ..$ : chr \"<pre>[Congressional Record Volume 167, Number 17 (Thursday, January 28, 2021)][House]From the Congressional Rec\"| __truncated__\n $ :List of 1\n  ..$ : chr \"Global Health Security Act of 2021\"\n $ :List of 1\n  ..$ : chr \"1.0.0\"\n```\n:::\n:::\n\n\nNow that we have the data we want in a list, we can flatten each element in the list into a **d**ata **f**rame **c**olumn using purrr's `flatten_dfc()`. However, notice the elements in a `singular_list` are not named. If we flatten this list to a data frame, our columns also won't have any column names. `xml_name()` creates a character vector of the nodes' names. When used in combination with `setNames()` we can create a named list. Just make sure `singular_list` and `singular_nodes` are the same length and in the same order.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\" code-summary=\"Name the list elements\"}\nsingular_list_named = setNames(singular_list, \n                                xml_name(singular_nodes))\n```\n:::\n\n\nWhen flattened, a named list becomes a data frame with column names in tow.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Flatten singular nodes into data frame\"}\n(bill_df = flatten_dfc(singular_list_named)) %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1\nColumns: 10\n$ billNumber                           <chr> \"391\"\n$ createDate                           <chr> \"2021-01-22T08:12:10Z\"\n$ updateDate                           <chr> \"2022-09-07T13:37:22Z\"\n$ originChamber                        <chr> \"House\"\n$ billType                             <chr> \"HR\"\n$ introducedDate                       <chr> \"2021-01-21\"\n$ congress                             <chr> \"117\"\n$ constitutionalAuthorityStatementText <chr> \"<pre>[Congressional Record Volum…\n$ title                                <chr> \"Global Health Security Act of 20…\n$ version                              <chr> \"1.0.0\"\n```\n:::\n:::\n\n\nWith the singular nodes transformed, we have the base of our data frame. The next step is to choose a nested element, define its structure in the output, and transform the XML accordingly.\n\n\n::: {.cell .column-screen-inset}\n\n:::\n\n\n# The more complicated (and realistic) case {#sec-nested-data}\n\nIn congressional XML data, the actions and votes on a bill are stored in containers. To collect this information and keep our dataset at the bill-level, we can transform each container into data frames using the same steps as before and then assign them as a list columns in our `bill_df` data frame.\n\n## Parse a single element\n\nActions are stored in a container node where each `<item>` represents a congressional action taken for a bill, such as being introduced, sent to a committee, debated on the floor, etc. Just as before, we use `as_list()` to convert the `{xml_nodeset}` to a list.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\" code-summary=\"Select all action elements and convert them to a list\"}\nactions_xml = xml_find_all(bill_node, \"actions/item\")\n\nactions_list = as_list(actions_xml)\n# Look at first action\nglimpse(actions_list[[1]], width = 50)\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.details summary=\"Structure of actions list\"}\nList of 6\n $ actionDate  :List of 1\n  ..$ : chr \"2021-07-12\"\n $ committees  :List of 1\n  ..$ item:List of 2\n  .. ..$ systemCode:List of 1\n  .. ..$ name      :List of 1\n $ links       : list()\n $ sourceSystem:List of 2\n  ..$ code:List of 1\n  .. ..$ : chr \"0\"\n  ..$ name:List of 1\n  .. ..$ : chr \"Senate\"\n $ text        :List of 1\n  ..$ : chr \"Received in the Senate and Read twice and referred to the Committee on Foreign Relations.\"\n $ type        :List of 1\n  ..$ : chr \"IntroReferral\"\n```\n:::\n:::\n\n\nFor an individual action, we have the date, a list of committees related to the action, some administrative information, the text and type of action. To deal with this, we can write a function (or set of functions) like the ones below to transform actions from a list to a data frame with their own nested elements.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"View helper functions\"}\n#' Helper function: flatten_dfc_rename\n#' Flatten a list into a data frame and apply a prefix to the column names\n#'\n#' @param list_to_flatten A list to flatten\n#' @param name_prefix A string to apply as a prefix to columns\n#'\n#' @return A data frame of columns that begin with the prefix\nflatten_dfc_rename = function(list_to_flatten, \n                              name_prefix = \"prefix\"){\n  rename_with(\n    .data = flatten_dfc(list_to_flatten), \n    .fn = ~str_c(name_prefix, \"_\", .),\n    # Exclude columns which already start with the prefix\n    .cols = -starts_with(name_prefix)\n  )\n}\n\n#' Function: parse_action\n#' Parse actions from list to data frame\n#' \n#' Separately flatten and rename source system and committee elements,\n#' then flatten and rename remaining elements. \n#' Committee elements are flattened into a nested data frame \n#' because an action can relate to multiple committees.\n#'\n#' @param action An action element in list form\n#'\n#' @return A data frame with a single row containing action information\nparse_action = function(action){\n  action %>% \n    # Flatten + rename sourceSystem elements\n    map_at(\"sourceSystem\", ~flatten_dfc_rename(.x, \"source\")) %>% \n    # Flatten + rename committees\n    map_at(\"committees\", function(committee){\n      # using map_at and map_dfr to create a data frame row for each committee\n      map_dfr(committee, ~flatten_dfc_rename(.x, \"committee\"))\n    }) %>% \n    # Flatten object to data frame\n    flatten_dfc_rename(., \"action\") %>% \n    # Lastly, clean the names\n    janitor::clean_names()\n}\n```\n:::\n\n\n\n\n## Apply it to all elements\n\nUsing the `{purrr}` library's `map_dfr()`, we apply my `parse_action()` function to each element of our actions list and combine the results into **d**ata **f**rame **r**ows.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Parse actions and combine into data frame\"}\n(actions_df = map_dfr(actions_list, parse_action)) %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 14\nColumns: 9\n$ action_date                  <chr> \"2021-07-12\", \"2021-06-28\", \"2021-06-28\",…\n$ action_committee_system_code <chr> \"ssfr00\", NA, NA, NA, NA, NA, NA, NA, NA,…\n$ action_committee_name        <chr> \"Foreign Relations Committee\", NA, NA, NA…\n$ action_source_code           <chr> \"0\", \"2\", \"2\", \"9\", \"2\", \"2\", \"2\", \"2\", \"…\n$ action_source_name           <chr> \"Senate\", \"House floor actions\", \"House f…\n$ action_text                  <chr> \"Received in the Senate and Read twice an…\n$ action_type                  <chr> \"IntroReferral\", \"Floor\", \"Floor\", \"Floor…\n$ action_time                  <chr> NA, \"19:46:03\", \"19:46:02\", \"19:46:02\", \"…\n$ action_code                  <chr> NA, \"H38310\", \"H37300\", \"8000\", \"H30000\",…\n```\n:::\n:::\n\n\nWhen you plan to combine rows into a data frame or `unnest()` the data in the future, it is useful to be explicit about the expected data types of each column. This can be done using `type_convert()`.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\" code-summary=\"Specify column types\"}\n# Specify column data types\nactions_col_types = cols(\n  action_date = col_date(),\n  action_time = col_time(),\n  action_committee_systemCode = col_character(), \n  action_committee_name = col_character(), \n  action_source_code = col_character(),\n  action_source_name = col_character(),\n  action_text = col_character(), \n  action_type = col_character(), \n  action_code = col_character()\n  )\n\n# Convert column types\nactions_df = type_convert(actions_df,\n                          col_types = actions_col_types)\n```\n:::\n\n\nBecause we are only adding a single row of data to `bill_df` we can encase the actions in a list and use dollar assignment. If you were adding multiple rows of data, you would need to make sure that you are adding a column of the same length as `bill_df`.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\" code-summary=\"Assign actions as list column in our data frame\"}\nbill_df$actions = list(actions_df)\n```\n:::\n\n\n\n\n# When they put XML in your XML\n\nSo we've dealt with cases with multiple child elements, but XML allows for all sorts of weird and wonderful storage options. The congressional data includes information about votes taken on a bill, the total vote count, and the votes of individual legislators. However, only the high level information is included in the `<recordedVotes>` element. the more detailed information on individual legislators' votes are contained in an XML file referenced by the `<url>` element as you can see below.[^12]\n\n[^12]: ![They heard you like XML so they put XML in your XML](https://c.tenor.com/um2EhyMQyR8AAAAC/xzibit-meme.gif){width=\"133\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Assign actions as list column in our data frame\"}\n# Find recordedVote nodes inside recordedVote container\nbill_recorded_vote_nodes = xml_find_all(\n  bill_node, \n  \"recordedVotes/recordedVote\"\n  )\n\n# Look at the nodeset contents\nxml_contents(bill_recorded_vote_nodes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n{xml_nodeset (7)}\n[1] <rollNumber>188</rollNumber>\n[2] <url>https://clerk.house.gov/evs/2021/roll188.xml</url>\n[3] <fullActionName>Final Passage Under Suspension of the Rules Results</full ...\n[4] <chamber>House</chamber>\n[5] <congress>117</congress>\n[6] <date>2021-06-28T23:46:02Z</date>\n[7] <sessionNumber>1</sessionNumber>\n```\n:::\n:::\n\n\nBefore we dive one level deeper, we can convert the top-level nodes to a list and flatten it into columns to start building our vote-level data frame.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Convert `<recordedVotes>` to a list and flatten into data frame\"}\n# Coerce nodes to list\nrecorded_votes_list = as_list(bill_recorded_vote_nodes)\n\n(recorded_votes_df = map_dfr(recorded_votes_list, flatten_dfc)) %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1\nColumns: 7\n$ rollNumber     <chr> \"188\"\n$ url            <chr> \"https://clerk.house.gov/evs/2021/roll188.xml\"\n$ fullActionName <chr> \"Final Passage Under Suspension of the Rules Results\"\n$ chamber        <chr> \"House\"\n$ congress       <chr> \"117\"\n$ date           <chr> \"2021-06-28T23:46:02Z\"\n$ sessionNumber  <chr> \"1\"\n```\n:::\n:::\n\n\n::: {.callout-note appearance=\"simple\"}\n## Note\n\nWe use `flatten_dfc()` to flatten each vote element into a data frame as columns and then `map_dfr()` rolls them all up as rows into a single data frame.\n:::\n\nNow to get the vote roll XML file we'll use `read_xml()` . There are two main nodes - `<vote-metadata>` and `<vote-data>`. One node contains the aggregated vote information, while `<vote-data>` contains the legislator-level vote data. We'll focus on `<vote-data>` here.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Read vote roll data and convert to list\"}\nvote_roll_xml = read_xml(recorded_votes_df$url)\n\n# Find all vote-data elements\nvote_data = xml_find_all(vote_roll_xml, \"vote-data\")\n\n# Find all recorded-vote elements\nvote_legislators = xml_find_all(vote_data, \"recorded-vote\")\n\n# Convert to list and show first element\n(legislators_list = as_list(vote_legislators))[1] %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 1\n $ :List of 2\n  ..$ legislator:List of 1\n  .. ..$ : chr \"Adams\"\n  .. ..- attr(*, \"name-id\")= chr \"A000370\"\n  .. ..- attr(*, \"sort-field\")= chr \"Adams\"\n  .. ..- attr(*, \"unaccented-name\")= chr \"Adams\"\n  .. ..- attr(*, \"party\")= chr \"D\"\n  .. ..- attr(*, \"state\")= chr \"NC\"\n  .. ..- attr(*, \"role\")= chr \"legislator\"\n  ..$ vote      :List of 1\n  .. ..$ : chr \"Yea\"\n```\n:::\n:::\n\n\nIf we use the same combination of `as_list()` , `map_dfr()`, and `flatten_dfc()` we can flatten the XML into one row per legislator but we lose all the attributes.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Convert list of votes to data frame and LOSE attributes\"}\n(vote_roll_flattened = as_list(vote_legislators) %>% \n  map_dfr(flatten_dfc))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 430 × 2\n   legislator  vote \n   <chr>       <chr>\n 1 Adams       Yea  \n 2 Aderholt    Nay  \n 3 Aguilar     Yea  \n 4 Allen       Nay  \n 5 Allred      Yea  \n 6 Amodei      Yea  \n 7 Armstrong   Yea  \n 8 Arrington   Nay  \n 9 Auchincloss Yea  \n10 Axne        Yea  \n# … with 420 more rows\n```\n:::\n:::\n\n\nTo extract the attributes before we flatten the data, we can apply `map_at()` to each legislator element and extract the attributes from each while retaining the value in `vote`.[^13]\n\n[^13]: We do lose the top-level element in the legislator list. This does not matter in this case because the name is repeated in the attributes, but be aware of this in case you want to combine values in a list with its attributes.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Extract attributes to list elements\"}\n(legislator_attr = legislators_list %>% \n    # Modify one level deeper using map_at to target legislator elements\n    map(map_at, \"legislator\", attributes))[[1]] %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 2\n $ legislator:List of 6\n  ..$ name-id        : chr \"A000370\"\n  ..$ sort-field     : chr \"Adams\"\n  ..$ unaccented-name: chr \"Adams\"\n  ..$ party          : chr \"D\"\n  ..$ state          : chr \"NC\"\n  ..$ role           : chr \"legislator\"\n $ vote      :List of 1\n  ..$ : chr \"Yea\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Convert list of votes to data frame and KEEP attributes\"}\n(legislator_vote_df = map_dfr(legislator_attr, flatten_dfc) %>% \n    # Use {janitor} to clean up the column names\n    janitor::clean_names()) %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 430\nColumns: 7\n$ name_id         <chr> \"A000370\", \"A000055\", \"A000371\", \"A000372\", \"A000376\",…\n$ sort_field      <chr> \"Adams\", \"Aderholt\", \"Aguilar\", \"Allen\", \"Allred\", \"Am…\n$ unaccented_name <chr> \"Adams\", \"Aderholt\", \"Aguilar\", \"Allen\", \"Allred\", \"Am…\n$ party           <chr> \"D\", \"R\", \"D\", \"R\", \"D\", \"R\", \"R\", \"R\", \"D\", \"D\", \"R\",…\n$ state           <chr> \"NC\", \"AL\", \"CA\", \"GA\", \"TX\", \"NV\", \"ND\", \"TX\", \"MA\", …\n$ role            <chr> \"legislator\", \"legislator\", \"legislator\", \"legislator\"…\n$ vote            <chr> \"Yea\", \"Nay\", \"Yea\", \"Nay\", \"Yea\", \"Yea\", \"Yea\", \"Nay\"…\n```\n:::\n:::\n\n\nIt can often feel like you're getting lost in a list of lists, but with some experimentation you'll be able to find your way back to the surface.\n\nNow we have a table of legislator voting data, and the last thing to take care of is the `<vote-metadata>`. Everything other than the `<vote-totals>` element is singular so we can get that out of the way the same way as before:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"View `<vote-metadata>` element\"}\n(vote_metadata = xml_find_all(vote_roll_xml, \"vote-metadata\")) %>% \n  xml_contents()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n{xml_nodeset (13)}\n [1] <majority>D</majority>\n [2] <congress>117</congress>\n [3] <session>1st</session>\n [4] <chamber>U.S. House of Representatives</chamber>\n [5] <rollcall-num>188</rollcall-num>\n [6] <legis-num>H R 391</legis-num>\n [7] <vote-question>On Motion to Suspend the Rules and Pass, as Amended</vote ...\n [8] <vote-type>2/3 YEA-AND-NAY</vote-type>\n [9] <vote-result>Passed</vote-result>\n[10] <action-date>28-Jun-2021</action-date>\n[11] <action-time time-etz=\"19:42\">7:42 PM</action-time>\n[12] <vote-desc>Global Health Security Act</vote-desc>\n[13] <vote-totals>\\n  <totals-by-party-header>\\n    <party-header>Party</part ...\n```\n:::\n:::\n\n\nBecause we have the individual votes, we don't need to keep the `<vote-totals>` element, but it is useful to note because it could serve as a check for data consistency in the future. Instead, we'll just keep the singular nodes in `<vote-metadata>`\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Convert singular vote nodes to data frame\"}\nvote_singular_nodes = xml_singular_nodes(vote_metadata)\n\n(vote_df = as_list(vote_singular_nodes) %>% \n  # as_list() doesn't retain element names so we set names ourselves\n  setNames(xml_name(vote_singular_nodes)) %>% \n  flatten_dfc() %>% \n    janitor::clean_names()) %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1\nColumns: 12\n$ majority      <chr> \"D\"\n$ congress      <chr> \"117\"\n$ session       <chr> \"1st\"\n$ chamber       <chr> \"U.S. House of Representatives\"\n$ rollcall_num  <chr> \"188\"\n$ legis_num     <chr> \"H R 391\"\n$ vote_question <chr> \"On Motion to Suspend the Rules and Pass, as Amended\"\n$ vote_type     <chr> \"2/3 YEA-AND-NAY\"\n$ vote_result   <chr> \"Passed\"\n$ action_date   <chr> \"28-Jun-2021\"\n$ action_time   <chr> \"7:42 PM\"\n$ vote_desc     <chr> \"Global Health Security Act\"\n```\n:::\n:::\n\n\nOnce we have our nodeset (which at last are all singular), we use the same listing, mapping, and flattening...or *lappening* as absolutely no one calls it.\n\nNow we can put all the pieces together and nest each element in its parent element until we've gotten back to the bill-level i.e. the vote roll data frame goes in the votes data frame, which goes in the bill data frame.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Nest each element in their parent data frame\"}\n# Nest legislator votes in the vote roll data frame\nvote_roll_df = vote_df %>% \n  mutate(legislator_votes = list(legislator_vote_df)) %>% \n    janitor::clean_names()\n\n# Nest vote rolls in the votes data frame\n(recorded_votes_df = recorded_votes_df %>% \n  mutate(vote = list(vote_roll_df))) %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1\nColumns: 8\n$ rollNumber     <chr> \"188\"\n$ url            <chr> \"https://clerk.house.gov/evs/2021/roll188.xml\"\n$ fullActionName <chr> \"Final Passage Under Suspension of the Rules Results\"\n$ chamber        <chr> \"House\"\n$ congress       <chr> \"117\"\n$ date           <chr> \"2021-06-28T23:46:02Z\"\n$ sessionNumber  <chr> \"1\"\n$ vote           <list> [<tbl_df[1 x 13]>]\n```\n:::\n\n```{.r .cell-code  code-summary=\"Nest each element in their parent data frame\"}\n# Nest votes in the bill data frame\nbill_df$votes = list(recorded_votes_df)\n```\n:::\n\n\nNow we have the bill-level characteristics with action and vote information nested in list columns. We can keep the data at the bill level or `unnest()` the elements we want to use.\n\n::: panel-tabset\n## Bill\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(bill_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1\nColumns: 12\n$ billNumber                           <chr> \"391\"\n$ createDate                           <chr> \"2021-01-22T08:12:10Z\"\n$ updateDate                           <chr> \"2022-09-07T13:37:22Z\"\n$ originChamber                        <chr> \"House\"\n$ billType                             <chr> \"HR\"\n$ introducedDate                       <chr> \"2021-01-21\"\n$ congress                             <chr> \"117\"\n$ constitutionalAuthorityStatementText <chr> \"<pre>[Congressional Record Volum…\n$ title                                <chr> \"Global Health Security Act of 20…\n$ version                              <chr> \"1.0.0\"\n$ actions                              <list> [<tbl_df[14 x 9]>]\n$ votes                                <list> [<tbl_df[1 x 8]>]\n```\n:::\n:::\n\n\n## Actions\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselect(bill_df, billType, billNumber, actions) %>% \n  unnest(actions) %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 14\nColumns: 11\n$ billType                     <chr> \"HR\", \"HR\", \"HR\", \"HR\", \"HR\", \"HR\", \"HR\",…\n$ billNumber                   <chr> \"391\", \"391\", \"391\", \"391\", \"391\", \"391\",…\n$ action_date                  <date> 2021-07-12, 2021-06-28, 2021-06-28, 2021…\n$ action_committee_system_code <chr> \"ssfr00\", NA, NA, NA, NA, NA, NA, NA, NA,…\n$ action_committee_name        <chr> \"Foreign Relations Committee\", NA, NA, NA…\n$ action_source_code           <chr> \"0\", \"2\", \"2\", \"9\", \"2\", \"2\", \"2\", \"2\", \"…\n$ action_source_name           <chr> \"Senate\", \"House floor actions\", \"House f…\n$ action_text                  <chr> \"Received in the Senate and Read twice an…\n$ action_type                  <chr> \"IntroReferral\", \"Floor\", \"Floor\", \"Floor…\n$ action_time                  <time>       NA, 19:46:03, 19:46:02, 19:46:02, …\n$ action_code                  <chr> NA, \"H38310\", \"H37300\", \"8000\", \"H30000\",…\n```\n:::\n:::\n\n\n## Votes (Vote-level)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Select bill ID and votes\nselect(bill_df, billType, billNumber, votes) %>% \n  unnest(votes) %>% \n  # Unnest further vote info and add prefix to cols\n  unnest(vote, names_sep = \"_\") %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1\nColumns: 22\n$ billType              <chr> \"HR\"\n$ billNumber            <chr> \"391\"\n$ rollNumber            <chr> \"188\"\n$ url                   <chr> \"https://clerk.house.gov/evs/2021/roll188.xml\"\n$ fullActionName        <chr> \"Final Passage Under Suspension of the Rules Res…\n$ chamber               <chr> \"House\"\n$ congress              <chr> \"117\"\n$ date                  <chr> \"2021-06-28T23:46:02Z\"\n$ sessionNumber         <chr> \"1\"\n$ vote_majority         <chr> \"D\"\n$ vote_congress         <chr> \"117\"\n$ vote_session          <chr> \"1st\"\n$ vote_chamber          <chr> \"U.S. House of Representatives\"\n$ vote_rollcall_num     <chr> \"188\"\n$ vote_legis_num        <chr> \"H R 391\"\n$ vote_vote_question    <chr> \"On Motion to Suspend the Rules and Pass, as Ame…\n$ vote_vote_type        <chr> \"2/3 YEA-AND-NAY\"\n$ vote_vote_result      <chr> \"Passed\"\n$ vote_action_date      <chr> \"28-Jun-2021\"\n$ vote_action_time      <chr> \"7:42 PM\"\n$ vote_vote_desc        <chr> \"Global Health Security Act\"\n$ vote_legislator_votes <list> [<tbl_df[430 x 7]>]\n```\n:::\n:::\n\n\n## Votes (Legislator-level)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Select bill ID and votes\nselect(bill_df, billType, billNumber, votes) %>% \n  unnest(votes) %>% \n  # Select bill ID, roll number, and vote list col\n  select(billType:rollNumber, vote) %>% \n  unnest(vote) %>% \n  # Select bill ID, roll number, and legislators list col\n  select(billType:rollNumber, legislator_votes) %>% \n  unnest(legislator_votes) %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 430\nColumns: 10\n$ billType        <chr> \"HR\", \"HR\", \"HR\", \"HR\", \"HR\", \"HR\", \"HR\", \"HR\", \"HR\", …\n$ billNumber      <chr> \"391\", \"391\", \"391\", \"391\", \"391\", \"391\", \"391\", \"391\"…\n$ rollNumber      <chr> \"188\", \"188\", \"188\", \"188\", \"188\", \"188\", \"188\", \"188\"…\n$ name_id         <chr> \"A000370\", \"A000055\", \"A000371\", \"A000372\", \"A000376\",…\n$ sort_field      <chr> \"Adams\", \"Aderholt\", \"Aguilar\", \"Allen\", \"Allred\", \"Am…\n$ unaccented_name <chr> \"Adams\", \"Aderholt\", \"Aguilar\", \"Allen\", \"Allred\", \"Am…\n$ party           <chr> \"D\", \"R\", \"D\", \"R\", \"D\", \"R\", \"R\", \"R\", \"D\", \"D\", \"R\",…\n$ state           <chr> \"NC\", \"AL\", \"CA\", \"GA\", \"TX\", \"NV\", \"ND\", \"TX\", \"MA\", …\n$ role            <chr> \"legislator\", \"legislator\", \"legislator\", \"legislator\"…\n$ vote            <chr> \"Yea\", \"Nay\", \"Yea\", \"Nay\", \"Yea\", \"Yea\", \"Yea\", \"Nay\"…\n```\n:::\n:::\n\n:::\n\nI'll stop there for brevity's sake, but you can find the code for extracting the full XML file [here](https://github.com/MokeEire/my-reps/blob/master/R/parsing_functions.R)[^14]. Please reach out with any feedback, leave a comment below, or share this with someone who's struggling with XML. There may even be a reward for anyone who finds mistakes in my code 🤷.\n\n[^14]: Ctrl/Cmd+F: `extract_bill_status`\n\n\n\n\n\n# Other helpful articles\n\nHere are some of the helpful articles I came across in the course of writing this:\n\n-   [From XML to Excel for Data Analysis](https://towardsdatascience.com/from-xml-to-excel-for-data-analysis-ac0c0c765b7d \"Introduction to Processing XML In Python\")\n-   [Reading XML files in R](https://medium.com/geekculture/reading-xml-files-in-r-3122c3a2a8d9)\n-   [Converting nested XML to dataframe in R](https://urbandatapalette.com/post/2021-03-xml-dataframe-r/)\n-   [Parse and process XML (and HTML) with xml2](https://www.rstudio.com/blog/xml2/)\n\n::: {.callout-note collapse=\"true\"}\n## Session Info\n\nVersion information about R, OS, and loaded packages.\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.2.1 (2022-06-23 ucrt)\n os       Windows 10 x64 (build 19045)\n system   x86_64, mingw32\n ui       RTerm\n language (EN)\n collate  English_Ireland.utf8\n ctype    English_Ireland.utf8\n tz       America/Los_Angeles\n date     2022-11-09\n pandoc   2.18 @ C:/Program Files/RStudio/bin/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n ! package        * version   date (UTC) lib source\n P assertthat       0.2.1     2019-03-21 [?] CRAN (R 4.2.0)\n P backports        1.4.1     2021-12-13 [?] CRAN (R 4.2.0)\n P bit              4.0.4     2020-08-04 [?] CRAN (R 4.2.0)\n P bit64            4.0.5     2020-08-30 [?] CRAN (R 4.2.0)\n P bitops           1.0-7     2021-04-24 [?] CRAN (R 4.2.0)\n P broom            1.0.0     2022-07-01 [?] CRAN (R 4.2.1)\n P cellranger       1.1.0     2016-07-27 [?] CRAN (R 4.2.0)\n P cli              3.4.0     2022-09-08 [?] CRAN (R 4.2.1)\n P colorspace       2.0-3     2022-02-21 [?] CRAN (R 4.2.0)\n P crayon           1.5.1     2022-03-26 [?] CRAN (R 4.2.0)\n P curl             4.3.2     2021-06-23 [?] CRAN (R 4.2.0)\n P DBI              1.1.3     2022-06-18 [?] CRAN (R 4.2.0)\n P dbplyr           2.2.1     2022-06-27 [?] CRAN (R 4.2.1)\n P digest           0.6.29    2021-12-01 [?] CRAN (R 4.2.0)\n P dplyr          * 1.0.10    2022-09-01 [?] CRAN (R 4.2.1)\n P ellipsis         0.3.2     2021-04-29 [?] CRAN (R 4.2.0)\n P evaluate         0.15      2022-02-18 [?] CRAN (R 4.2.0)\n P extrafont      * 0.18      2022-04-12 [?] CRAN (R 4.2.0)\n P extrafontdb      1.0       2012-06-11 [?] CRAN (R 4.2.0)\n P fansi            1.0.3     2022-03-24 [?] CRAN (R 4.2.0)\n P fastmap          1.1.0     2021-01-25 [?] CRAN (R 4.2.0)\n P forcats        * 0.5.1     2021-01-27 [?] CRAN (R 4.2.0)\n P fs               1.5.2     2021-12-08 [?] CRAN (R 4.2.0)\n P gargle           1.2.0     2021-07-02 [?] CRAN (R 4.2.0)\n P generics         0.1.3     2022-07-05 [?] CRAN (R 4.2.1)\n P ggplot2        * 3.3.6     2022-05-03 [?] CRAN (R 4.2.0)\n P glue             1.6.2     2022-02-24 [?] CRAN (R 4.2.0)\n P googledrive      2.0.0     2021-07-08 [?] CRAN (R 4.2.0)\n P googlesheets4    1.0.0     2021-07-21 [?] CRAN (R 4.2.0)\n P gtable           0.3.1     2022-09-01 [?] CRAN (R 4.2.1)\n P haven            2.5.0     2022-04-15 [?] CRAN (R 4.2.0)\n P hms              1.1.1     2021-09-26 [?] CRAN (R 4.2.0)\n P htmltools        0.5.3     2022-07-18 [?] CRAN (R 4.2.1)\n P htmlwidgets      1.5.4     2021-09-08 [?] CRAN (R 4.2.0)\n P httr             1.4.3     2022-05-04 [?] CRAN (R 4.2.0)\n P janitor          2.1.0     2021-01-05 [?] CRAN (R 4.2.1)\n P jsonlite       * 1.8.0     2022-02-22 [?] CRAN (R 4.2.0)\n P knitr            1.40      2022-08-24 [?] CRAN (R 4.2.1)\n P lifecycle        1.0.1     2021-09-24 [?] CRAN (R 4.2.0)\n P log4r          * 0.4.2     2021-11-04 [?] CRAN (R 4.2.0)\n P lubridate      * 1.8.0     2021-10-07 [?] CRAN (R 4.2.0)\n P magrittr         2.0.3     2022-03-30 [?] CRAN (R 4.2.0)\n P microbenchmark   1.4.9     2021-11-09 [?] CRAN (R 4.2.0)\n P modelr           0.1.8     2020-05-19 [?] CRAN (R 4.2.0)\n   mokeR          * 0.1.0     2022-10-03 [1] local (C:/Users/Mark/Documents/Projects/mokeR_0.1.0.tar.gz)\n P munsell          0.5.0     2018-06-12 [?] CRAN (R 4.2.0)\n P pillar           1.8.1     2022-08-19 [?] CRAN (R 4.2.1)\n P pkgconfig        2.0.3     2019-09-22 [?] CRAN (R 4.2.0)\n P purrr          * 0.3.4     2020-04-17 [?] CRAN (R 4.2.0)\n P R6               2.5.1     2021-08-19 [?] CRAN (R 4.2.0)\n P RCurl          * 1.98-1.9  2022-10-03 [?] CRAN (R 4.2.1)\n P reactable      * 0.3.0     2022-05-26 [?] CRAN (R 4.2.0)\n P reactR           0.4.4     2021-02-22 [?] CRAN (R 4.2.0)\n P readr          * 2.1.2     2022-01-30 [?] CRAN (R 4.2.0)\n P readxl           1.4.0     2022-03-28 [?] CRAN (R 4.2.0)\n   renv             0.15.5    2022-05-26 [1] CRAN (R 4.2.1)\n P reprex           2.0.1     2021-08-05 [?] CRAN (R 4.2.0)\n P rjson          * 0.2.21    2022-01-09 [?] CRAN (R 4.2.0)\n P rlang            1.0.5     2022-08-31 [?] CRAN (R 4.2.1)\n P rmarkdown        2.18      2022-11-09 [?] CRAN (R 4.2.1)\n P rstudioapi       0.13      2020-11-12 [?] CRAN (R 4.2.0)\n   Rttf2pt1         1.3.8     2020-01-10 [1] CRAN (R 4.2.1)\n P rvest            1.0.2     2021-10-16 [?] CRAN (R 4.2.0)\n P scales           1.2.1     2022-08-20 [?] CRAN (R 4.2.1)\n P sessioninfo      1.2.2     2021-12-06 [?] CRAN (R 4.2.0)\n P snakecase        0.11.0    2019-05-25 [?] CRAN (R 4.2.1)\n P stringi          1.7.8     2022-07-11 [?] CRAN (R 4.2.1)\n P stringr        * 1.4.1     2022-08-20 [?] CRAN (R 4.2.1)\n P tibble         * 3.1.8     2022-07-22 [?] CRAN (R 4.2.1)\n P tidyjson       * 0.3.1     2020-05-31 [?] CRAN (R 4.2.0)\n P tidyr          * 1.2.1     2022-09-08 [?] CRAN (R 4.2.1)\n P tidyselect       1.1.2     2022-02-21 [?] CRAN (R 4.2.0)\n P tidyverse      * 1.3.2     2022-07-18 [?] CRAN (R 4.2.1)\n P tzdb             0.3.0     2022-03-28 [?] CRAN (R 4.2.0)\n P utf8             1.2.2     2021-07-24 [?] CRAN (R 4.2.0)\n P vctrs            0.4.1     2022-04-13 [?] CRAN (R 4.2.0)\n P vroom            1.5.7     2021-11-30 [?] CRAN (R 4.2.0)\n P withr            2.5.0     2022-03-03 [?] CRAN (R 4.2.0)\n P xfun             0.32      2022-08-10 [?] CRAN (R 4.2.1)\n P XML            * 3.99-0.11 2022-10-03 [?] CRAN (R 4.2.1)\n P xml2           * 1.3.3     2021-11-30 [?] CRAN (R 4.2.0)\n P yaml             2.3.5     2022-02-21 [?] CRAN (R 4.2.0)\n\n [1] C:/Users/Mark/Documents/Projects/Blog/renv/library/R-4.2/x86_64-w64-mingw32\n [2] C:/Program Files/R/R-4.2.1/library\n\n P ── Loaded and on-disk path mismatch.\n\n──────────────────────────────────────────────────────────────────────────────\n```\n:::\n:::\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/core-js-2.5.3/shim.min.js\"></script>\r\n<script src=\"../../site_libs/react-17.0.0/react.min.js\"></script>\r\n<script src=\"../../site_libs/react-17.0.0/react-dom.min.js\"></script>\r\n<script src=\"../../site_libs/reactwidget-1.0.0/react-tools.js\"></script>\r\n<script src=\"../../site_libs/htmlwidgets-1.5.4/htmlwidgets.js\"></script>\r\n<script src=\"../../site_libs/reactable-binding-0.3.0/reactable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}